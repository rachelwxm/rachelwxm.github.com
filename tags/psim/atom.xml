<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: PSim | Blog{Rachel|BENM}]]></title>
  <link href="http://rachelwxm.github.io/tags/psim/atom.xml" rel="self"/>
  <link href="http://rachelwxm.github.io/"/>
  <updated>2014-07-16T22:44:16+08:00</updated>
  <id>http://rachelwxm.github.io/</id>
  <author>
    <name><![CDATA[Wu Xiaomeng(Rachel)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PSim-a pilot study sequencing simulator]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/04/21/psim-a-pilot-study-sequencing-simulator/"/>
    <updated>2014-04-21T16:57:44+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/04/21/psim-a-pilot-study-sequencing-simulator</id>
    <content type="html"><![CDATA[<h2>PSim 用户使用手册</h2>

<h3>简介</h3>

<p><strong>名称</strong>：PSim-a pilot study sequencing simulator<br/>
<strong>作者</strong>：Rachel Wu(<a href="&#x6d;&#97;&#105;&#x6c;&#116;&#111;&#x3a;&#114;&#97;&#99;&#104;&#x65;&#x6c;&#x77;&#x75;&#49;&#x32;&#51;&#x40;&#x67;&#109;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#109;">&#114;&#x61;&#x63;&#x68;&#x65;&#x6c;&#x77;&#x75;&#x31;&#50;&#x33;&#x40;&#103;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;</a>)，BENM Feng(<a href="&#x6d;&#97;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#66;&#105;&#110;&#x78;&#105;&#x61;&#111;&#x46;&#101;&#x6e;&#x67;&#x40;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;">&#66;&#105;&#x6e;&#x78;&#105;&#97;&#111;&#x46;&#101;&#110;&#x67;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;</a>)<br/>
<strong>版本</strong>：1.5<br/>
<strong>更新日期</strong>：2014-04-20 <br/>
<strong>依存包</strong>：perl，Math-Random模块<br/>
<strong>简要描述</strong>：<br/>
PSim是一个用来模拟NGS测序数据的实验软件包，用perl语言编写。它可以模拟固定读长长度（如illumina或SOLiD）或随机读长长度（如Roche 454、Ion Torrent或PacBio）、单端测序（single end sequencing）或者双端测序（pair-end sequencing）、常规样本测序或损伤DNA样本测序、基因组DNA或cDNA测序等。用户可以提供指定的模拟参考序列，或者由程序根据设定长度随机生成参考序列。模拟数据与参考序列之间可以存在结构变异（structure variation）或单核苷酸多态性（single nucleotide polymorphism），这些参数可指定位点、区域及相应概率生成或随机生成。<br/>
在PSim程序的流程设计中，模拟了真实样本的处理过程，包括：模板DNA与已知序列的变异、*DNA片段损伤，*样品预扩增，*单链建库/双链建库，建库过程随机打断、加入测序特异性接头（adapter）或PE连接序列（linker）、测序错误的产生、生成测序质量值等。<br/>
*标记特指损伤DNA测序步骤。</p>

<!--more-->


<h3>安装</h3>

<p><strong>获取及安装</strong>：<br/>
PSim软件包可以在github网站（<a href="https://github.com/rachelwxm/Psim">https://github.com/rachelwxm/Psim</a> ）下载。<br/>
PSim依赖于perl语言，用户需在安装了perl软件的计算机上使用；程序中使用到了Math-Random的生成泊松分布数函数，用户需自行安装该模块。<br/>
Perl安装方式：</p>

<ul>
<li>Linux系统中通常以预先安装了perl程序，无需重复安装；</li>
<li>Windows系统用户请在activestate网站（<a href="http://www.activestate.com/activeperl">http://www.activestate.com/activeperl</a> ）下载并安装activeperl。</li>
</ul>


<p>Math-Random模块安装方式:<br/>
1. 使用CPAN模块自动安装（需要root权限）：
```</p>

<pre><code>#Linux用户
perl –MCPAN –e shell
#初次运行需要做一些设置，选择CPAN镜像站点
cpan&gt;install Math::Random
cpan&gt;q
#windows用户
ppm
ppm&gt;install Math::Random
</code></pre>

<p><code>
2. 手动安装  
在http://search.cpan.org/~grommel/Math-Random-0.70/Random.pm 下载模块源代码，然后在终端中输入：  
</code></p>

<pre><code>tar zxvf Math-Random-0.70.tar.gz
cd Math-Random-0.70
perl Makefile.PL
make
make test
make install
#如果没有root权限，请手动设定安装路径
tar zxvf Math-Random-0.70.tar.gz
cd Math-Random-0.70
perl Makefile.PL PREFIX=YOURDIR
make
make test
make install
</code></pre>

<p>```</p>

<h3>功能</h3>

<ul>
<li>生成随机序列<br/>
生成n条指定长度或者n条长度符合泊松分布的序列，可用于生成测试的参考序列。</li>
</ul>


<p>主程序参数：<br/>
```perl</p>

<pre><code>perl GenerateSeq.pl [-n] [-l] [-pre] [-auto] &gt; OUTFILE
  -n NUM                number of sequence (default=1)
  -l NUM or NUM,NUM...  length of each sequence, separate different length by "," 
  -pre CHAR             prefix of your sequence(s)
  -auto                 randomly generate n sequences for Poisson distribution with average length of “–l” 
</code></pre>

<p><code>
示例：
</code>perl</p>

<pre><code>#生成5条长度分别为3000bp, 4000bp, 6000bp, 5000bp, 8000bp的序列，序列名称前缀为test-1，序列文件名称为test-1.fa
perl GenerateSeq.pl –n 5 –l 3000,4000,6000,5000,8000 –pre test-1 &gt; test-1.fa
#生成5条平均长度为5000bp的序列, 序列名称前缀为test-2, 序列文件名称为test-2.fa
perl GenerateSeq.pl –n 5 –l 5000 –pre test-2 –auto &gt; test-2.fa
</code></pre>

<p><code>
* 结构变异   
结构变异是指基因组内大于1kb的DNA片段的插入（insertion）、缺失（deletion）、重复（tandem repeat）、倒位（reversion）及易位（translocation），在本程序中也包括短片段的插入和缺失。如设定指定位置变异，用户需在运行模拟程序前编写包含结构变异信息的文件，参见example文件夹中的sv_example.txt文件，格式为：第一列是参考序列名称（与输入参考序列的名称应完全相同），第二列是结构变异类型（包括deletion、insertion、tandem_repeat、reversion及translocation），第三列是位点、长度等信息，具体如下：  
</code></p>

<pre><code>deletion    起始位点1，长度1；起始位点2，长度2；……
#不同信息之间以分号“;”隔开
insertion   插入位点1，序列1；插入位点2，序列2；……
inversion   起始位点1，长度1；起始位点2，长度2；……
tandem_repeat   起始位点1，长度1，重复次数1；起始位点2，长度2，重复次数2；……
translocation   起始位点1，长度1，插入位点1；起始位点1，长度1，插入位点1；……
</code></pre>

<p><code>
主程序参数：
</code></p>

<pre><code>--sv &lt;NUM|FILE&gt; structure variation rate and average length (default= 0.1:3000) or specific sv type and site file(format refer to ../example/sv_example.txt)
</code></pre>

<p>示例：</p>

<pre><code>#根据预先设定的结构变异信息文件(如DIR/PSim/example/sv_example.txt)对参考序列产生变异
--sv DIR/PSim/input/sv_example.txt
#随机生成结构变异，变异序列长度占参考序列全长的10%，发生结构变异片段的平均长度是3000bp
--sv 0.1:3000
#无sv变异
--sv 0
</code></pre>

<p>```
* 单核苷酸多态性 <br/>
如设定指定位点的突变，用户需在运行模拟程序前编写包含SNP变异信息的文件，参见example文件夹中的snp_example.txt文件，格式为：第一列是参考序列名称（与输入参考序列的名称应完全相同），第二列是突变位置，第三列是可能突变的碱基，第四列是突变成不同碱基的概率。三四列不同碱基或数值之间用逗号隔开。</p>

<p>主程序参数： <br/>
```</p>

<pre><code>--snp &lt;NUM|FILE&gt;    random snp rate (default=0.001) or specific snp site and rate file (format refer to ../example/snp_examp le.txt)
</code></pre>

<p>示例：</p>

<pre><code>#根据预先设定的SNP信息文件(如DIR/PSim/input/snp_info.txt)对参考序列产生变异
--snp DIR/PSim/example/snp_example.txt
#随机生成SNP突变，突变位点数目占参考序列全长的0.1%
--snp 0.001
#无SNP突变
--snp 0
</code></pre>

<p>```
* 文库构建<br/>
文库构建过程包括：样本的随机打断及连接接头序列。<br/>
DNA样本随机打断产生DNA短片段（fragment），对于固定读长的测序方法，应尽量保证全部fragment长度大于读长，对于非固定读长的测序方法，fragment长度即为读长。用户需设定fragment的平均长度（-fragmean）、标准差（-fragsd）及是否有长度限制（-fraglim）。类似Illumina的测序方法中，在fragment两端连接接头（adapter）片段；类似Roche 454 PE 测序方法中在fragment首位连接Linker序列。</p>

<p>主程序参数：<br/>
```</p>

<pre><code>--cov &lt;NUM&gt; sequencing coverage of reference sequence(s) (default=3)
--fragmean &lt;INT&gt;    average length of library fragment(default=200)
--fragsd &lt;INT&gt;  standard deviation of library fragment(default=10)
--fraglim &lt;INT&gt; limit length of fragment library("20+" means must above 20nt, and "240-" means must shorter than 240nt,if(-damage) this parameter default=20+)
--adapter &lt;CHAR&gt;    adapter sequence (default sequence refer to ../example/adapterIllumina_example.txt, split two adapters by ":")
#在Roche 454 PE测序方法中：
--insert &lt;INT&gt;    average insert size and sd(default=8000:30 if --pe)
--linker &lt;CHAR&gt;   PE insert seq (default=\"ATAACTTCGTATAATGTATGCTATACG AAGTTAT\")
</code></pre>

<p><code>
示例：   
</code></p>

<pre><code>#模拟5倍覆盖度、fragment平均长度为150、标准差为6、使用默认接头序列
--cov 5 --fragmean 150 --fragsd 6 
#Roche 454 PE，模拟4倍覆盖度、插入片段长度均值8kb、方差35、fragment平均长度为650、标准差为50、使用默认linker序列
--pe --cov 4 --insert 8000:35 --fragmean 650 --fragsd 50
</code></pre>

<p>```
* RNA-seq（cDNA测序）<br/>
根据基因注释gff文件中给出的不同转录本的信息，以转录本为参考序列生成模拟测序数据。gff（General feature format）文件格式请参阅Sanger网站<a href="http://www.sanger.ac.uk/resources/software/gff/spec.html">http://www.sanger.ac.uk/resources/software/gff/spec.html</a> 。</p>

<p>主程序参数： <br/>
```</p>

<pre><code> --cdna             RNA-SEQ sequencing
 --gff &lt;FILE&gt;       input gene gff file
 --covcdna &lt;INT&gt;    mean coverage of cDNA sequences(default=10 if --cdna)
</code></pre>

<p><code>
示例：  
</code></p>

<pre><code>#模拟RNA-seq测序，gff文件在DIR/PSim/example/gff_example.txt，测序覆盖度为20倍
--cdna --gff DIR/PSim/example/gff_example.txt –covcdna 20
</code></pre>

<p>```
* 损伤DNA测序<br/>
DNA损伤模型为：损伤DNA的两条链末端不能够完全互补，形成粘性末端，粘性末端长度范围由参数—overhang设置；每条DNA片段不同位点都有一定的损伤（变异）概率，不同位点的损伤分布状态，需要用户输入用于训练模型的矩阵，参照DIR/PSim/example/mut site_example. txt；某些区域会有定向突变（如某种碱基排布结构容易发生某种情况的变异），这一内容可以在SNP或SV的信息中提供。 <br/>
损伤DNA测序的建库方式有单链建库和双链建库两种方式。单链建库时每条链的变异信息可以独立保留下来；双链建库中的补平末端操作（fill-in reaction）会将不能扩增补平的3’端剪切掉，损失部分的DNA及损伤信息，并且在两端都可扩增的情况双末端扩增概率可有参数&mdash;effic设置。在两种方法中DNA片段两条链都存在一定的丢失率，用户可通过参数&mdash;lost或&mdash;ds设置。<br/>
损伤DNA由于样本量小，建库前期会先进行预扩增扩大样本量，PCR扩增倍数可由参数&mdash;ampmean设置，扩增效率符合泊松分布。</p>

<p>主程序参数：<br/>
```</p>

<pre><code>--damage    the sequencing sample have overhanging and injured end
--overhang &lt;INT&gt;    overhang length range of double strain (default= "3_20")
--library &lt;INT&gt; library preparation type (1=single strain,2=double strain, default=1)
--ds &lt;NUM&gt;  rate of lost one strain of double strain library (default=0.1)
--lost &lt;NUM&gt;    lost rate single strain while library=1(default=0.5)
--ampmean &lt;NUM&gt; average amplification times (default=850)
--mutarray &lt;FILE&gt;   mutation rate array file (format refer to ../examp le/mutationarray_example, default 100% C-&gt;T)
--mutsite &lt;FILE&gt;    mutation possibility along fragment site (format refer to ../example/mutationsite_example, default 0.01)
--effic &lt;NUM&gt;   efficiency of fill-in reaction (default=0.5)
</code></pre>

<p><code>
示例：  
</code></p>

<pre><code>#模拟损伤DNA测序，末端非互补区域长度范围是3nt~20nt，采用双链建库方式，建库过程单链损失率为30%，双末端扩增效率为30%，损伤模型位点矩阵文件是DIR/PSim/example e/mutsite_example.txt, 损伤碱基转换矩阵文件是DIR/PSim/example/mutarray_example.txt，PCR扩增倍数均值为800倍。
--damage --overhang 3_20 --library 2 --ds 0.3 --ampmean 800 --mutarray DIR/PSim/example/mutarray_example.txt --mutsite DIR/PSim/example/muts ite_example.txt --effic 0.3
</code></pre>

<p>```
* 测序 <br/>
对于固定读长的测序方法（如Illumina和SOLiD），需用户在&mdash;read参数中设定读长长度；对于SOLiD测序，还需要指定测序起始碱基类别。在测序过程中，同时产生每个碱基的质量值，值域为0~40，SOLiD和Roche 454测序结果中直接以数值表示，Illumina用ASCII码表示，根据不同的fastq格式有两种表示范围（Sanger/Illumina），详情参见<a href="http://en.wikipedia.org/wiki/FASTQ_format%E3%80%82">http://en.wikipedia.org/wiki/FASTQ_format%E3%80%82</a></p>

<p>主程序参数：  <br/>
```</p>

<pre><code>--read &lt;INT&gt;    average length of reads(default=100)
--error &lt;NUM&gt;   sequencing error rate and possibilities of single base error, insert and deletion (default="0.0005:0.34:0.33:0.33")
--qtype &lt;CHAR&gt;  quality type (!=Sanger format, @=illumina 1.3~1.8- format, default=!)
--qmean &lt;NUM&gt;   peak value of quality score(default=37)
--qsd &lt;NUM&gt; standard deviation of quality score (default=1)
SOLiD
--header &lt;CHAR&gt; sequencing header base (default=G)
</code></pre>

<p><code>
示例：  
</code></p>

<pre><code>#读长长度202bp，测序错误率为0.001，三种类型（error，insert和deletion）的比重分别为0.5,0.25,0.25，平均质量值35，标准差1.5，质量值表示方式为Sanger类型。
--read 202 --error 0.001:0.5:0.25:0.25 --qtype ! --qmean 35 --qsd 1.5
#读长长度50bp，测序错误率为0.0002，三种类型（error，insert和deletion）的比重分别为0.5,0.25,0.25，平均质量值37，标准差1，SOLiD测序，起始碱基为A。
--read 50 --error 0.0002:0.5:0.25:0.25 --qmean 37 --qsd 1 --header A
</code></pre>

<p>生成文件：</p>

<pre><code>output.fasta--Roche或SOLiD的测序reads文件，一行名称一行序列相间隔，序列名称前以“&gt;”开头；
    &gt;PSim_Roche454.1
    CCTAACCCTAACCCTAACCCTCGCG
    output.qual--Roche或SOLiD的测序质量文件，一行名称一行质量值相间隔，序列名称前以“&gt;”开头，质量值范围0~40，用数字直接表示；
    &gt;PSim_Roche454.1
    38 38 38 38 38 38 38 38 38 38 38 38 38 38 38
    output.fastq--llumina SE的测序reads及质量文件，标准fastq文件格式；
    @RachelWu:1:BENM:1:1:7572:10362 0:N:0:ATCACG
    TCAAACATAAATGAGCAGGCAAGCTGGCTAGAAAACCAC
    +
    =&gt;?@AABCDEEEEEEEEEEEEEEDDDDDDDDDDDDDDDD
    output-1.fastq  --llumina PE的测序正向reads及质量文件，标准fastq文件格式；
    output-2.fastq  --llumina PE的测序反向reads及质量文件，标准fastq文件格式；
    NameRecordByPSim.txt--reads名称与其在参考序列上的位置、长度对应关系，第一列为reads名称，第二列是其在参考序列上的位置信息，包括：参考序列名称、reads编号、fragment在参考序列上的起始位点、终止位点、长度
    &gt;RachelWu_1_1_0 chromosomeGRCh37-1-1040010bp 0 start=744403 end=744493 length=91
    SNPReportByPSim.txt--生成的SNP信息，每列信息分别是参考序列名称、SNP位点、突变前碱基、突变后碱基
    chromosomeGRCh37-1-1040010bp    389093  C   A
    SVReportByPSim.txt--生成的SV信息，
    chromosomeGRCh37-1-1040010bp    inversion   240285  2896
    chromosomeGRCh37-1-1040010bp    deletion    641559  2205
    chromosomeGRCh37-1-1040010bp    translocation   533138  2394    405275
    chromosomeGRCh37-1-1040010bp    inversion   565987  3117
    chromosomeGRCh37-1-1040010bp    inserion
    MutationByPSim.txt--损伤DNA测序模拟生成的损伤信息，每列信息分别是参考序列名称、reads信息编号、突变位点、突变前碱基、突变后碱基
    chromosomeGRCh37-1-1040010bp    576-2   1   C   T
    chromosomeGRCh37-1-1040010bp    576-2   59  G   C
    chromosomeGRCh37-1-1040010bp    580-2   47  T   G
</code></pre>

<p>```</p>

<h3>例子</h3>

<p>```</p>

<pre><code>#用默认参数生成Illumina测序数据，生成的文件存放于PSim/output文件夹中
perl PSim.pl illumina –-ref ../example/example.fa –-dir ../output 
#用默认参数生成Roche测序数据，生成的文件存放于PSim/output文件夹中
perl PSim.pl roche –-ref ../example/example.fa –-dir ../output 
#用默认参数生成SOLiD测序数据，生成的文件存放于PSim/output文件夹中
perl PSim.pl solid –-ref ../example/example.fa –-dir ../output 
#用示例参考序列生成15倍覆盖度、Illumina测序方法、PE测序、无SV及SNP变异、
perl PSim.pl illumina –ref ../example/example.fa –cov 15 –sv 0 –snp 0 –-dir ../output
</code></pre>

<p><code>    
A  SV
</code></p>

<pre><code>1. Based on ancestral diploid reference(~1Mb), simulate a children sequence with SVs, including mentioned above.
2. Fragment to 200, 500, 1000bp hierarchical insert size library, insert span s.d. &lt;35; 10 folds for each library.
3. Used these reads for denovo assembly to be a bunch of contigs or scaffolds (using SOAPdenovo or Phusion-meta or CA or Velvet)
4. Mapped these reads and contigs to reference;
5. Using SV detector to find SV;
6. Draw module and diagnostic depicted figures, and validation/evaluation (FP, FN, TP, TN, Sn, Sp, CC, ACP, AC)
</code></pre>

<p><code>
B  Paleogenomics
</code></p>

<pre><code>1. Based on ancestral diploid reference(~1Mb), simulate a children sequence with SNPs/InDels with same most part of same locus as dbSNP, and parts of private diversity (~0.!%).
2. Fragment to 30~200bp with overhanding or only single strand DNA;
3. Add damage by nucleotide substitution according to training stochastic matrix;
4. PCR duplication, ~1000x.
5. Sequencing with sequencing errors (~1%) for each reads via stochastic probability.
6.  Mapped these reads to reference;
5. Using GATE to called variation;
6. Find damage (I will do this part);
7. Draw figures for evaluating DNA damage, and their distribution compared to design.
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>

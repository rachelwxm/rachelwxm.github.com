<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Blog{Rachel|BENM}]]></title>
  <link href="http://rachelwxm.github.io/atom.xml" rel="self"/>
  <link href="http://rachelwxm.github.io/"/>
  <updated>2014-09-18T15:07:53+08:00</updated>
  <id>http://rachelwxm.github.io/</id>
  <author>
    <name><![CDATA[Wu Xiaomeng(Rachel)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[文献分享-metagenome binning]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/09/18/wen-xian-fen-xiang-genome-sequences-of-rare/"/>
    <updated>2014-09-18T12:06:07+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/09/18/wen-xian-fen-xiang-genome-sequences-of-rare</id>
    <content type="html"><![CDATA[<h4>文章来源</h4>

<p><a href="http://www.nature.com/nbt/journal/v31/n6/abs/nbt.2579.html">Albertsen M, Hugenholtz P, Skarshewski A, et al. Genome sequences of rare, uncultured bacteria obtained by differential coverage binning of multiple metagenomes[J]. Nature biotechnology, 2013, 31(6): 533-538.</a><br/>
基于宏基因组覆盖度差异获得罕见的、非培养的细菌基因组序列</p>

<h4>背景和意义</h4>

<ul>
<li>意义： 从非培养的宏基因组中分离出单个细菌基因组</li>
<li>宏基因组binning方法

<ul>
<li>基于序列相似性比对</li>
<li>基于物种分类标记物基因</li>
<li>基于序列特征（GC）</li>
<li>基于关联性特征，结合机器学习</li>
</ul>
</li>
<li>局限性

<ul>
<li>数据库中缺乏相应的序列</li>
<li>不是所有的宏基因组 DNA 都包含标记物基因，标记物基因种间水平转移</li>
<li>序列短，序列覆盖度低</li>
<li>计算功能、算法要求高</li>
</ul>
</li>
</ul>


<!--more-->


<p></p>

<h4>样品来源</h4>

<p>丹麦某污水处理厂的活性污泥反应器（activated sludge bioreactor）</p>

<h4>数据来源</h4>

<p>两种不同的DNA提取方法：</p>

<ul>
<li>热酚处理（HP+：29G）-破坏细菌细胞壁，降低部分菌株的含量</li>
<li>非热酚处理（HP-：57G）</li>
</ul>


<h4>研究方法</h4>

<p>[fig1_flow<em>]
<img alt='Fig 1. Overview of the pipeline to obtain high-quality population genomes from multiple deep metagenomes using differential coverage as the primary binning method, illustrated using the population genome TM7-AAU-ii.'  src='http://rachelwxm.github.io/images/POST/MetaBin/meta_bin_flow.png'><br/>
Step1：采样（包含多种微生物）；<br/>
Step2：使用两种方法提取宏基因组DNA，这两种方式会导致不同物种DNA在宏基因组DNA中相对丰度的差异；<br/>
Step3：使用Hiseq2000测序平台，PE150策略进行测序；<br/>
Step4：对原始的测序数据（Raw Data）进行质控、</em>de novo_组装，因为HP+处理后的样本测序量低而且测出来的reads有物种偏向性，最后只用了HP-处理的数据组装的scaffold做后续分析；</p>

<blockquote><p>However, because fewer reads were sequenced and there was a skewed spe- cies abundance toward few organisms in the HP+ metagenome, only the HP− metagenome scaffolds were used for extraction of full genomes</p></blockquote>

<p>Step5：Hp+和HP-的reads与scaffold比对（mapping），计算每个scaffold在两种处理下的相对丰度；<br/>
Step6：对每个分理处的bin进行基于四核苷酸频率的PCA分析；<br/>
Step7：统计每个scaffold的GC含量；<br/>
Step8：标记基因鉴定：用HMMER3软件预测scaffold的ORF区域，再与RefSeq数据库比对注释；</p>

<p>Step9：将scaffold按照它们在两种处理中的相对丰度聚类（binning），如图2所示，图中横坐标是各scaffold在HP-处理中的相对丰度，纵坐标是在HP+处理中的相对丰度；聚类原理是：当在菌株级别对样品做处理时，来自同一个物种的DNA会整体表现降低，相对的没有受到热酚影响的物种的DNA丰度会整体表现提高；<br/>
<img alt='Fig 2. Sequence composition–independent binning of metagenome scaffolds from the lab-scale bioreactor using differential coverage (HP+, HP−).' src='http://rachelwxm.github.io/images/POST/MetaBin/composition–independent binning.png'><br/>
Step10：利用PE reads将已分类的bin中的序列与多拷贝区域连接起来，再用Cytoscape软件画出连接图；<br/>
Step11：将所有mapping到一个bin的reads重新组装；<br/>
Step12：评估组装出“单菌”的基因组DNA完整性，用Circle画圈图。</p>

<h4>研究结果</h4>

<p>从宏基因组测序结果中组装出序列量小并且无参的基因组，组装得到31个细菌基因组（包括相对低丰度&lt;1%的），其中12个已经或接近得到完整基因组信息，12个中的4个属于TM7门。</p>

<h4>分析工具</h4>

<table>
<thead>
<tr>
<th></th>
<th> 模块  </th>
<th> 工具 </th>
<th>  参数  </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>sequencing</td>
<td> HiSeq2000</td>
<td> PE150|</td>
</tr>
<tr>
<td></td>
<td>trimming   CLC Genomics </td>
<td>Workbench </td>
<td>MinQ=20,MinLen=50,adapter, no ambiguous nucleotides|</td>
</tr>
<tr>
<td></td>
<td>assembly   </td>
<td>CLC Genomics Workbench</td>
<td>    k-mer=63|</td>
</tr>
<tr>
<td></td>
<td>mapping</td>
<td>   CLC Genomics Workbench  </td>
<td>相似度>95%，覆盖度=100%|</td>
</tr>
<tr>
<td></td>
<td>PCA    </td>
<td>R  </td>
<td> |</td>
</tr>
<tr>
<td></td>
<td>ORF predict</td>
<td>   HMMER3  -cut_tc</td>
<td></td>
</tr>
<tr>
<td></td>
<td>align  </td>
<td>blastp，MEGAN </td>
<td>RefSeq protein database</td>
</tr>
<tr>
<td></td>
<td>plot   R   </td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>visualization  </td>
<td>Cytoscape  </td>
<td></td>
</tr>
<tr>
<td></td>
<td>Re-assembly    </td>
<td>CLC &amp; Velvet   </td>
<td>k-mer=99</td>
</tr>
</tbody>
</table>


<h4>CLC Genomics Workbench</h4>

<p>由丹麦生物信息学软件公司CLC Bio（QIAGEN收购）开发<br/>
功能：分析各代测序数据—质控、组装、mapping、变异检测、注释、比较基因组学分析、图形化展示、差异表达分析、RNA二级结构预测、引物和探针设计、系统进化分析……<br/>
优点：图形化界面，多系统支持，自有算法，功能整合<br/>
缺点：贵</p>

<h4>其他binning工具</h4>

<p>TETRA：四核苷酸多态性的统计聚类<br/>
Phylopythia：基于支持向量机，通过已知序列的信息来判断宏基因组中某片段归为哪一类<br/>
SOrt-ITEMS：基于序列比对，鉴定分类地位，直系同源聚类<br/>
INDUS &amp; TWARIT：基于寡核苷酸的组成</p>

<h4>参考资料</h4>

<p>[1]<a href="http://blog.sina.com.cn/s/blog_670445240101lght.html">每日一生信—宏基因组聚类（binning\classification）</a><br/>
[2] Mande, Sharmila S.; Monzoorul Haque Mohammed; Tarini Shankar Ghosh (2012). &ldquo;Classification of metagenomic sequences: methods and challenges.&rdquo;. Briefings in Bioinformatics 13 (6): 669–81.<br/>
[3]<a href="http://omictools.com/binning-shotgun-reads-c191-p1.html">OMIStools</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用perl画SVG图]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/09/12/yong-perlhua-svgtu/"/>
    <updated>2014-09-12T17:33:54+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/09/12/yong-perlhua-svgtu</id>
    <content type="html"><![CDATA[<p>本文翻译自perl的<a href="http://search.cpan.org/~ronan/SVG-2.28/SVG/Manual.pm#___top" target="_blank">SVG模块内容</a></p>

<p>===========</p>

<h4>名称</h4>

<p>SVG &ndash; Perl extension for generating Scalable Vector Graphics (SVG) documents</p>

<h4>版本</h4>

<p>2.24</p>

<!--more-->


<h4>描述</h4>

<h4>梗概</h4>

<pre><code>#!/usr/bin/perl -w
use strict;
use SVG;

# 创建一个新的SVG图形，并设置画布大小
my $svg= SVG-&gt;new(width=&gt;200,height=&gt;200);

#创建一个group
my $y=$svg-&gt;group(
    id    =&gt; 'group_y',
    style =&gt; { stroke=&gt;'red', fill=&gt;'green' }
);

#在这个分组中添加一个圆形
$y-&gt;circle(cx=&gt;100, cy=&gt;100, r=&gt;50, id=&gt;'circle_in_group_y');

#或者使用'tag'的方式创建一个group
my $z=$svg-&gt;tag('g',
    id    =&gt; 'group_z',
    style =&gt; {
        stroke =&gt; 'rgb(100,200,50)',
        fill   =&gt; 'rgb(10,100,150)'
    }
);

#用'tag'方式创建一个名为circle的元素，其内容为一个圆形
$z-&gt;tag('circle', cx=&gt;50, cy=&gt;50, r=&gt;100, id=&gt;'circle_in_group_z');

#创建一个链接，原链接符是一个矩形，其他参数使用group z的设定
my $k = $z-&gt;anchor(
    id      =&gt; 'anchor_k',
    -href   =&gt; 'http://test.hackmare.com/',
    -target =&gt; 'new_window_0'
    )-&gt;rectangle(
        x     =&gt; 20, y      =&gt; 50,
        width =&gt; 20, height =&gt; 30,
        rx    =&gt; 10, ry     =&gt; 5,
        id    =&gt; 'rect_k_in_anchor_k_in_group_z'
    );

#打印SVG图
print $svg-&gt;xmlify;

# or render a child node of the SVG object without rendering the entire object
print $k-&gt;xmlify; #renders the anchor $k above containing a rectangle, but does not
#render any of the ancestor nodes of $k


# or, explicitly use svg namespace and generate a document with its own DTD
print $svg-&gt;xmlify(-namespace=&gt;'svg');

# or, explicitly use svg namespace and generate an in-line docunent
print $svg-&gt;xmlify(
    -namespace =&gt; "svg",
    -pubid =&gt; "-//W3C//DTD SVG 1.0//EN",
    -inline   =&gt; 1
);
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[deploy时[non-fast-forward]报错]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/07/16/deployshi-non-fast-forward-bao-cuo/"/>
    <updated>2014-07-16T22:59:23+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/07/16/deployshi-non-fast-forward-bao-cuo</id>
    <content type="html"><![CDATA[<h4>[转载]Deploy时[non-fast-forward]reject问题解决方案</h4>

<p>Github+Octopress rake deploy时[non-fast-forward]reject问题解决方案
好久没更新blog，今天写好文deploy时发现报错：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>! [rejected]        master -&gt; master (non-fast-forward)</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>在网络google了半下午，终于找到了解决方案：
更换目录，并更新：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd octopress/_deploy
</span><span class='line'>git pull origin master</span></code></pre></td></tr></table></div></figure>


<p><font color="#FF0000">如果想要强制推送本地代码,可以执行<code>git push -f</code>。</font> &mdash;by Rahel    <br/>
跳出目录，重新deploy：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ..
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<p>问题解决。<br/>
参考：<br/>
<a href="http://stackoverflow.com/questions/17609453/rake-gen-deploy-rejected-in-octopress">http://stackoverflow.com/questions/17609453/rake-gen-deploy-rejected-in-octopress</a> <br/>
原文地址：<br/>
<a href="http://www.conxz.net/blog/2014/04/12/non-fast-forward-error-with-octopress/">http://www.conxz.net/blog/2014/04/12/non-fast-forward-error-with-octopress/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PSim-a pilot study sequencing simulator]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/04/21/psim-a-pilot-study-sequencing-simulator/"/>
    <updated>2014-04-21T16:57:44+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/04/21/psim-a-pilot-study-sequencing-simulator</id>
    <content type="html"><![CDATA[<h2>PSim 用户使用手册</h2>

<h3>简介</h3>

<p><strong>名称</strong>：PSim-a pilot study sequencing simulator<br/>
<strong>作者</strong>：Rachel Wu(rachelwu123&lt;at>gmail&lt;dot>com)，BENM Feng(BinxiaoFeng&lt;at>gmail&lt;dot>com)<br/>
<strong>版本</strong>：1.5<br/>
<strong>更新日期</strong>：2014-04-20 <br/>
<strong>依存包</strong>：perl，Math-Random模块<br/>
<strong>简要描述</strong>：<br/>
PSim是一个用来模拟NGS测序数据的实验软件包，用perl语言编写。它可以模拟固定读长长度（如illumina或SOLiD）或随机读长长度（如Roche 454、Ion Torrent或PacBio）、单端测序（single end sequencing）或者双端测序（pair-end sequencing）、常规样本测序或损伤DNA样本测序、基因组DNA或cDNA测序等。用户可以提供指定的模拟参考序列，或者由程序根据设定长度随机生成参考序列。模拟数据与参考序列之间可以存在结构变异（structure variation）或单核苷酸多态性（single nucleotide polymorphism），这些参数可指定位点、区域及相应概率生成或随机生成。<br/>
在PSim程序的流程设计中，模拟了真实样本的处理过程，包括：模板DNA与已知序列的变异、*DNA片段损伤，*样品预扩增，*单链建库/双链建库，建库过程随机打断、加入测序特异性接头（adapter）或PE连接序列（linker）、测序错误的产生、生成测序质量值等。<br/>
*标记特指损伤DNA测序步骤。</p>

<!--more-->


<h3>安装</h3>

<p><strong>获取及安装</strong>：<br/>
PSim软件包可以在github网站（<a href="https://github.com/rachelwxm/Psim">https://github.com/rachelwxm/Psim</a> ）下载。<br/>
PSim依赖于perl语言，用户需在安装了perl软件的计算机上使用；程序中使用到了Math-Random的生成泊松分布数函数，用户需自行安装该模块。<br/>
Perl安装方式：</p>

<ul>
<li>Linux系统中通常以预先安装了perl程序，无需重复安装；</li>
<li>Windows系统用户请在activestate网站（<a href="http://www.activestate.com/activeperl">http://www.activestate.com/activeperl</a> ）下载并安装activeperl。</li>
</ul>


<p>Math-Random模块安装方式:<br/>
1. 使用CPAN模块自动安装（需要root权限）：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#Linux用户
</span><span class='line'>perl –MCPAN –e shell
</span><span class='line'>#初次运行需要做一些设置，选择CPAN镜像站点
</span><span class='line'>cpan&gt;install Math::Random
</span><span class='line'>cpan&gt;q
</span><span class='line'>#windows用户
</span><span class='line'>ppm
</span><span class='line'>ppm&gt;install Math::Random</span></code></pre></td></tr></table></div></figure>


<p>  <br/>
2. 手动安装<br/>
在<a href="http://search.cpan.org/~grommel/Math-Random-0.70/Random.pm">http://search.cpan.org/~grommel/Math-Random-0.70/Random.pm</a> 下载模块源代码，然后在终端中输入：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tar zxvf Math-Random-0.70.tar.gz
</span><span class='line'>cd Math-Random-0.70
</span><span class='line'>perl Makefile.PL
</span><span class='line'>make
</span><span class='line'>make test
</span><span class='line'>make install
</span><span class='line'>#如果没有root权限，请手动设定安装路径
</span><span class='line'>tar zxvf Math-Random-0.70.tar.gz
</span><span class='line'>cd Math-Random-0.70
</span><span class='line'>perl Makefile.PL PREFIX=YOURDIR
</span><span class='line'>make
</span><span class='line'>make test
</span><span class='line'>make install</span></code></pre></td></tr></table></div></figure>


<h3>功能</h3>

<ul>
<li>生成随机序列<br/>
生成n条指定长度或者n条长度符合泊松分布的序列，可用于生成测试的参考序列。</li>
</ul>


<p>主程序参数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="n">perl</span> <span class="n">GenerateSeq</span><span class="o">.</span><span class="n">pl</span> <span class="p">[</span><span class="o">-</span><span class="n">n</span><span class="p">]</span> <span class="p">[</span><span class="o">-</span><span class="n">l</span><span class="p">]</span> <span class="p">[</span><span class="o">-</span><span class="n">pre</span><span class="p">]</span> <span class="p">[</span><span class="o">-</span><span class="n">auto</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">OUTFILE</span>
</span><span class='line'>  <span class="o">-</span><span class="n">n</span> <span class="n">NUM</span>                <span class="n">number</span> <span class="n">of</span> <span class="n">sequence</span> <span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="o">-</span><span class="n">l</span> <span class="n">NUM</span> <span class="ow">or</span> <span class="n">NUM</span><span class="p">,</span><span class="n">NUM</span><span class="o">...</span>   <span class="nb">length</span> <span class="n">of</span> <span class="nb">each</span> <span class="n">sequence</span><span class="p">,</span> <span class="n">separate</span> <span class="n">different</span> <span class="nb">length</span> <span class="n">by</span> <span class="s">&quot;,&quot;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">pre</span> <span class="n">CHAR</span>             <span class="n">prefix</span> <span class="n">of</span> <span class="n">your</span> <span class="n">sequence</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span><span class='line'>  <span class="o">-</span><span class="n">auto</span>                 <span class="n">randomly</span> <span class="n">generate</span> <span class="n">n</span> <span class="n">sequences</span> <span class="k">for</span> <span class="n">Poisson</span> <span class="n">distribution</span> <span class="n">with</span> <span class="n">average</span> <span class="nb">length</span> <span class="n">of</span> <span class="err">“–</span><span class="n">l</span><span class="err">”</span>
</span></code></pre></td></tr></table></div></figure>


<p>示例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#生成5条长度分别为3000bp, 4000bp, 6000bp, 5000bp, 8000bp的序列，序列名称前缀为test-1，序列文件名称为test-1.fa</span>
</span><span class='line'><span class="n">perl</span> <span class="n">GenerateSeq</span><span class="o">.</span><span class="n">pl</span> <span class="err">–</span><span class="n">n</span> <span class="mi">5</span> <span class="err">–</span><span class="n">l</span> <span class="mi">3000</span><span class="p">,</span><span class="mi">4000</span><span class="p">,</span><span class="mi">6000</span><span class="p">,</span><span class="mi">5000</span><span class="p">,</span><span class="mi">8000</span> <span class="err">–</span><span class="n">pre</span> <span class="n">test</span><span class="o">-</span><span class="mi">1</span> <span class="o">&gt;</span> <span class="n">test</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="n">fa</span>
</span><span class='line'><span class="c1">#生成5条平均长度为5000bp的序列, 序列名称前缀为test-2, 序列文件名称为test-2.fa</span>
</span><span class='line'><span class="n">perl</span> <span class="n">GenerateSeq</span><span class="o">.</span><span class="n">pl</span> <span class="err">–</span><span class="n">n</span> <span class="mi">5</span> <span class="err">–</span><span class="n">l</span> <span class="mi">5000</span> <span class="err">–</span><span class="n">pre</span> <span class="n">test</span><span class="o">-</span><span class="mi">2</span> <span class="err">–</span><span class="n">auto</span> <span class="o">&gt;</span> <span class="n">test</span><span class="o">-</span><span class="mi">2</span><span class="o">.</span><span class="n">fa</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>结构变异 <br/>
结构变异是指基因组内大于1kb的DNA片段的插入（insertion）、缺失（deletion）、重复（tandem repeat）、倒位（reversion）及易位（translocation），在本程序中也包括短片段的插入和缺失。如设定指定位置变异，用户需在运行模拟程序前编写包含结构变异信息的文件，参见example文件夹中的sv_example.txt文件，格式为：第一列是参考序列名称（与输入参考序列的名称应完全相同），第二列是结构变异类型（包括deletion、insertion、tandem_repeat、reversion及translocation），第三列是位点、长度等信息，具体如下：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="n">deletion</span>  <span class="err">起始位点</span><span class="mi">1</span><span class="err">，长度</span><span class="mi">1</span><span class="err">；起始位点</span><span class="mi">2</span><span class="err">，长度</span><span class="mi">2</span><span class="err">；……</span>
</span><span class='line'><span class="c1">#不同信息之间以分号“;”隔开</span>
</span><span class='line'><span class="n">insertion</span>  <span class="err">插入位点</span><span class="mi">1</span><span class="err">，序列</span><span class="mi">1</span><span class="err">；插入位点</span><span class="mi">2</span><span class="err">，序列</span><span class="mi">2</span><span class="err">；……</span>
</span><span class='line'><span class="n">inversion</span>  <span class="err">起始位点</span><span class="mi">1</span><span class="err">，长度</span><span class="mi">1</span><span class="err">；起始位点</span><span class="mi">2</span><span class="err">，长度</span><span class="mi">2</span><span class="err">；……</span>
</span><span class='line'><span class="n">tandem_repeat</span>  <span class="err">起始位点</span><span class="mi">1</span><span class="err">，长度</span><span class="mi">1</span><span class="err">，重复次数</span><span class="mi">1</span><span class="err">；起始位点</span><span class="mi">2</span><span class="err">，长度</span><span class="mi">2</span><span class="err">，重复次数</span><span class="mi">2</span><span class="err">；……</span>
</span><span class='line'><span class="n">translocation</span>  <span class="err">起始位点</span><span class="mi">1</span><span class="err">，长度</span><span class="mi">1</span><span class="err">，插入位点</span><span class="mi">1</span><span class="err">；起始位点</span><span class="mi">1</span><span class="err">，长度</span><span class="mi">1</span><span class="err">，插入位点</span><span class="mi">1</span><span class="err">；……</span>
</span></code></pre></td></tr></table></div></figure>


<p>主程序参数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="o">--</span><span class="n">sv</span> <span class="sr">&lt;NUM|FILE&gt;</span>  <span class="n">structure</span> <span class="n">variation</span> <span class="n">rate</span> <span class="ow">and</span> <span class="n">average</span> <span class="nb">length</span> <span class="p">(</span><span class="n">default</span><span class="o">=</span> <span class="mf">0.1</span><span class="p">:</span><span class="mi">3000</span><span class="p">)</span> <span class="ow">or</span> <span class="n">specific</span> <span class="n">sv</span> <span class="n">type</span> <span class="ow">and</span> <span class="n">site</span> <span class="n">file</span><span class="p">(</span><span class="nb">format</span> <span class="n">refer</span> <span class="n">to</span> <span class="o">..</span><span class="sr">/example/s</span><span class="n">v_example</span><span class="o">.</span><span class="n">txt</span><span class="p">)</span>
</span><span class='line'><span class="err">示例：</span>
</span><span class='line'><span class="c1">#根据预先设定的结构变异信息文件(如DIR/PSim/example/sv_example.txt)对参考序列产生变异</span>
</span><span class='line'><span class="o">--</span><span class="n">sv</span> <span class="n">DIR</span><span class="sr">/PSim/i</span><span class="n">nput</span><span class="o">/</span><span class="n">sv_example</span><span class="o">.</span><span class="n">txt</span>
</span><span class='line'><span class="c1">#随机生成结构变异，变异序列长度占参考序列全长的10%，发生结构变异片段的平均长度是3000bp</span>
</span><span class='line'><span class="o">--</span><span class="n">sv</span> <span class="mf">0.1</span><span class="p">:</span><span class="mi">3000</span>
</span><span class='line'><span class="c1">#无sv变异</span>
</span><span class='line'><span class="o">--</span><span class="n">sv</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>单核苷酸多态性 <br/>
如设定指定位点的突变，用户需在运行模拟程序前编写包含SNP变异信息的文件，参见example文件夹中的snp_example.txt文件，格式为：第一列是参考序列名称（与输入参考序列的名称应完全相同），第二列是突变位置，第三列是可能突变的碱基，第四列是突变成不同碱基的概率。三四列不同碱基或数值之间用逗号隔开。</li>
</ul>


<p>主程序参数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="o">--</span><span class="n">snp</span> <span class="sr">&lt;NUM|FILE&gt;</span> <span class="n">random</span> <span class="n">snp</span> <span class="n">rate</span> <span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mf">0.001</span><span class="p">)</span> <span class="ow">or</span> <span class="n">specific</span> <span class="n">snp</span> <span class="n">site</span> <span class="ow">and</span> <span class="n">rate</span> <span class="n">file</span> <span class="p">(</span><span class="nb">format</span> <span class="n">refer</span> <span class="n">to</span> <span class="o">..</span><span class="sr">/example/s</span><span class="n">np_examp</span> <span class="ow">le</span><span class="o">.</span><span class="n">txt</span><span class="p">)</span>
</span><span class='line'><span class="err">示例：</span>
</span><span class='line'><span class="c1">#根据预先设定的SNP信息文件(如DIR/PSim/input/snp_info.txt)对参考序列产生变异</span>
</span><span class='line'><span class="o">--</span><span class="n">snp</span> <span class="n">DIR</span><span class="sr">/PSim/</span><span class="n">example</span><span class="o">/</span><span class="n">snp_example</span><span class="o">.</span><span class="n">txt</span>
</span><span class='line'><span class="c1">#随机生成SNP突变，突变位点数目占参考序列全长的0.1%</span>
</span><span class='line'><span class="o">--</span><span class="n">snp</span> <span class="mf">0.001</span>
</span><span class='line'><span class="c1">#无SNP突变</span>
</span><span class='line'><span class="o">--</span><span class="n">snp</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>文库构建<br/>
文库构建过程包括：样本的随机打断及连接接头序列。<br/>
DNA样本随机打断产生DNA短片段（fragment），对于固定读长的测序方法，应尽量保证全部fragment长度大于读长，对于非固定读长的测序方法，fragment长度即为读长。用户需设定fragment的平均长度（-fragmean）、标准差（-fragsd）及是否有长度限制（-fraglim）。类似Illumina的测序方法中，在fragment两端连接接头（adapter）片段；类似Roche 454 PE 测序方法中在fragment首位连接Linker序列。</li>
</ul>


<p>主程序参数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="o">--</span><span class="n">cov</span> <span class="sr">&lt;NUM&gt;</span>  <span class="n">sequencing</span> <span class="n">coverage</span> <span class="n">of</span> <span class="n">reference</span> <span class="n">sequence</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">fragmean</span> <span class="sr">&lt;INT&gt;</span>  <span class="n">average</span> <span class="nb">length</span> <span class="n">of</span> <span class="n">library</span> <span class="n">fragment</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">fragsd</span> <span class="sr">&lt;INT&gt;</span>    <span class="n">standard</span> <span class="n">deviation</span> <span class="n">of</span> <span class="n">library</span> <span class="n">fragment</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">fraglim</span> <span class="sr">&lt;INT&gt;</span>   <span class="n">limit</span> <span class="nb">length</span> <span class="n">of</span> <span class="n">fragment</span> <span class="n">library</span><span class="p">(</span><span class="s">&quot;20+&quot;</span> <span class="n">means</span> <span class="n">must</span> <span class="n">above</span> <span class="mi">20</span><span class="n">nt</span><span class="p">,</span> <span class="ow">and</span> <span class="s">&quot;240-&quot;</span> <span class="n">means</span> <span class="n">must</span> <span class="n">shorter</span> <span class="n">than</span> <span class="mi">240</span><span class="n">nt</span><span class="p">,</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="n">damage</span><span class="p">)</span> <span class="n">this</span> <span class="n">parameter</span> <span class="n">default</span><span class="o">=</span><span class="mi">20</span><span class="o">+</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">adapter</span> <span class="sr">&lt;CHAR&gt;</span>  <span class="n">adapter</span> <span class="n">sequence</span> <span class="p">(</span><span class="n">default</span> <span class="n">sequence</span> <span class="n">refer</span> <span class="n">to</span> <span class="o">..</span><span class="sr">/example/</span><span class="n">adapterIllumina_example</span><span class="o">.</span><span class="n">txt</span><span class="p">,</span> <span class="nb">split</span> <span class="n">two</span> <span class="n">adapters</span> <span class="n">by</span> <span class="s">&quot;:&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1">#在Roche 454 PE测序方法中：</span>
</span><span class='line'><span class="o">--</span><span class="n">insert</span> <span class="sr">&lt;INT&gt;</span>    <span class="n">average</span> <span class="n">insert</span> <span class="n">size</span> <span class="ow">and</span> <span class="n">sd</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">8000</span><span class="p">:</span><span class="mi">30</span> <span class="k">if</span> <span class="o">--</span><span class="n">pe</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">linker</span> <span class="sr">&lt;CHAR&gt;</span>   <span class="n">PE</span> <span class="n">insert</span> <span class="n">seq</span> <span class="p">(</span><span class="n">default</span><span class="o">=\</span><span class="err">&quot;</span><span class="n">ATAACTTCGTATAATGTATGCTATACG</span> <span class="n">AAGTTAT</span><span class="o">\</span><span class="err">&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>示例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#模拟5倍覆盖度、fragment平均长度为150、标准差为6、使用默认接头序列</span>
</span><span class='line'><span class="o">--</span><span class="n">cov</span> <span class="mi">5</span> <span class="o">--</span><span class="n">fragmean</span> <span class="mi">150</span> <span class="o">--</span><span class="n">fragsd</span> <span class="mi">6</span>
</span><span class='line'><span class="c1">#Roche 454 PE，模拟4倍覆盖度、插入片段长度均值8kb、方差35、fragment平均长度为650、标准差为50、使用默认linker序列</span>
</span><span class='line'><span class="o">--</span><span class="n">pe</span> <span class="o">--</span><span class="n">cov</span> <span class="mi">4</span> <span class="o">--</span><span class="n">insert</span> <span class="mi">8000</span><span class="p">:</span><span class="mi">35</span> <span class="o">--</span><span class="n">fragmean</span> <span class="mi">650</span> <span class="o">--</span><span class="n">fragsd</span> <span class="mi">50</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>RNA-seq（cDNA测序）<br/>
根据基因注释gff文件中给出的不同转录本的信息，以转录本为参考序列生成模拟测序数据。gff（General feature format）文件格式请参阅Sanger网站<a href="http://www.sanger.ac.uk/resources/software/gff/spec.html">http://www.sanger.ac.uk/resources/software/gff/spec.html</a> 。</li>
</ul>


<p>主程序参数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'> <span class="o">--</span><span class="n">cdna</span>                <span class="n">RNA</span><span class="o">-</span><span class="n">SEQ</span> <span class="n">sequencing</span>
</span><span class='line'> <span class="o">--</span><span class="n">gff</span> <span class="sr">&lt;FILE&gt;</span>     <span class="n">input</span> <span class="n">gene</span> <span class="n">gff</span> <span class="n">file</span>
</span><span class='line'> <span class="o">--</span><span class="n">covcdna</span> <span class="sr">&lt;INT&gt;</span>  <span class="n">mean</span> <span class="n">coverage</span> <span class="n">of</span> <span class="n">cDNA</span> <span class="n">sequences</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">10</span> <span class="k">if</span> <span class="o">--</span><span class="n">cdna</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>示例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#模拟RNA-seq测序，gff文件在DIR/PSim/example/gff_example.txt，测序覆盖度为20倍</span>
</span><span class='line'><span class="o">--</span><span class="n">cdna</span> <span class="o">--</span><span class="n">gff</span> <span class="n">DIR</span><span class="sr">/PSim/</span><span class="n">example</span><span class="o">/</span><span class="n">gff_example</span><span class="o">.</span><span class="n">txt</span> <span class="err">–</span><span class="n">covcdna</span> <span class="mi">20</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>损伤DNA测序<br/>
DNA损伤模型为：损伤DNA的两条链末端不能够完全互补，形成粘性末端，粘性末端长度范围由参数—overhang设置；每条DNA片段不同位点都有一定的损伤（变异）概率，不同位点的损伤分布状态，需要用户输入用于训练模型的矩阵，参照DIR/PSim/example/mut site_example. txt；某些区域会有定向突变（如某种碱基排布结构容易发生某种情况的变异），这一内容可以在SNP或SV的信息中提供。 <br/>
损伤DNA测序的建库方式有单链建库和双链建库两种方式。单链建库时每条链的变异信息可以独立保留下来；双链建库中的补平末端操作（fill-in reaction）会将不能扩增补平的3’端剪切掉，损失部分的DNA及损伤信息，并且在两端都可扩增的情况双末端扩增概率可有参数&mdash;effic设置。在两种方法中DNA片段两条链都存在一定的丢失率，用户可通过参数&mdash;lost或&mdash;ds设置。<br/>
损伤DNA由于样本量小，建库前期会先进行预扩增扩大样本量，PCR扩增倍数可由参数&mdash;ampmean设置，扩增效率符合泊松分布。</li>
</ul>


<p>主程序参数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="o">--</span><span class="n">damage</span>   <span class="n">the</span> <span class="n">sequencing</span> <span class="n">sample</span> <span class="n">have</span> <span class="n">overhanging</span> <span class="ow">and</span> <span class="n">injured</span> <span class="n">end</span>
</span><span class='line'><span class="o">--</span><span class="n">overhang</span> <span class="sr">&lt;INT&gt;</span>  <span class="n">overhang</span> <span class="nb">length</span> <span class="n">range</span> <span class="n">of</span> <span class="n">double</span> <span class="n">strain</span> <span class="p">(</span><span class="n">default</span><span class="o">=</span> <span class="s">&quot;3_20&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">library</span> <span class="sr">&lt;INT&gt;</span>   <span class="n">library</span> <span class="n">preparation</span> <span class="n">type</span> <span class="p">(</span><span class="mi">1</span><span class="o">=</span><span class="n">single</span> <span class="n">strain</span><span class="p">,</span><span class="mi">2</span><span class="o">=</span><span class="n">double</span> <span class="n">strain</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">ds</span> <span class="sr">&lt;NUM&gt;</span>    <span class="n">rate</span> <span class="n">of</span> <span class="n">lost</span> <span class="n">one</span> <span class="n">strain</span> <span class="n">of</span> <span class="n">double</span> <span class="n">strain</span> <span class="n">library</span> <span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mf">0.1</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">lost</span> <span class="sr">&lt;NUM&gt;</span>  <span class="n">lost</span> <span class="n">rate</span> <span class="n">single</span> <span class="n">strain</span> <span class="k">while</span> <span class="n">library</span><span class="o">=</span><span class="mi">1</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">ampmean</span> <span class="sr">&lt;NUM&gt;</span>   <span class="n">average</span> <span class="n">amplification</span> <span class="nb">times</span> <span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">850</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">mutarray</span> <span class="sr">&lt;FILE&gt;</span> <span class="n">mutation</span> <span class="n">rate</span> <span class="n">array</span> <span class="n">file</span> <span class="p">(</span><span class="nb">format</span> <span class="n">refer</span> <span class="n">to</span> <span class="o">..</span><span class="sr">/examp le/m</span><span class="n">utationarray_example</span><span class="p">,</span> <span class="n">default</span> <span class="mi">100</span><span class="nv">%</span> <span class="nv">C</span><span class="o">-&gt;</span><span class="n">T</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">mutsite</span> <span class="sr">&lt;FILE&gt;</span>  <span class="n">mutation</span> <span class="n">possibility</span> <span class="n">along</span> <span class="n">fragment</span> <span class="n">site</span> <span class="p">(</span><span class="nb">format</span> <span class="n">refer</span> <span class="n">to</span> <span class="o">..</span><span class="sr">/example/m</span><span class="n">utationsite_example</span><span class="p">,</span> <span class="n">default</span> <span class="mf">0.01</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">effic</span> <span class="sr">&lt;NUM&gt;</span> <span class="n">efficiency</span> <span class="n">of</span> <span class="n">fill</span><span class="o">-</span><span class="n">in</span> <span class="n">reaction</span> <span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>示例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#模拟损伤DNA测序，末端非互补区域长度范围是3nt~20nt，采用双链建库方式，建库过程单链损失率为30%，双末端扩增效率为30%，损伤模型位点矩阵文件是DIR/PSim/example e/mutsite_example.txt, 损伤碱基转换矩阵文件是DIR/PSim/example/mutarray_example.txt，PCR扩增倍数均值为800倍。</span>
</span><span class='line'><span class="o">--</span><span class="n">damage</span> <span class="o">--</span><span class="n">overhang</span> <span class="mi">3_20</span> <span class="o">--</span><span class="n">library</span> <span class="mi">2</span> <span class="o">--</span><span class="n">ds</span> <span class="mf">0.3</span> <span class="o">--</span><span class="n">ampmean</span> <span class="mi">800</span> <span class="o">--</span><span class="n">mutarray</span> <span class="n">DIR</span><span class="sr">/PSim/</span><span class="n">example</span><span class="sr">/mutarray_example.txt --mutsite DIR/</span><span class="n">PSim</span><span class="sr">/example/m</span><span class="n">uts</span> <span class="n">ite_example</span><span class="o">.</span><span class="n">txt</span> <span class="o">--</span><span class="n">effic</span> <span class="mf">0.3</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>测序 <br/>
对于固定读长的测序方法（如Illumina和SOLiD），需用户在&mdash;read参数中设定读长长度；对于SOLiD测序，还需要指定测序起始碱基类别。在测序过程中，同时产生每个碱基的质量值，值域为0~40，SOLiD和Roche 454测序结果中直接以数值表示，Illumina用ASCII码表示，根据不同的fastq格式有两种表示范围（Sanger/Illumina），详情参见<a href="http://en.wikipedia.org/wiki/FASTQ_format%E3%80%82">http://en.wikipedia.org/wiki/FASTQ_format%E3%80%82</a></li>
</ul>


<p>主程序参数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="o">--</span><span class="nb">read</span> <span class="sr">&lt;INT&gt;</span>    <span class="n">average</span> <span class="nb">length</span> <span class="n">of</span> <span class="n">reads</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">error</span> <span class="sr">&lt;NUM&gt;</span> <span class="n">sequencing</span> <span class="n">error</span> <span class="n">rate</span> <span class="ow">and</span> <span class="n">possibilities</span> <span class="n">of</span> <span class="n">single</span> <span class="n">base</span> <span class="n">error</span><span class="p">,</span> <span class="n">insert</span> <span class="ow">and</span> <span class="n">deletion</span> <span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="s">&quot;0.0005:0.34:0.33:0.33&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">qtype</span> <span class="sr">&lt;CHAR&gt;</span>    <span class="n">quality</span> <span class="n">type</span> <span class="p">(</span><span class="o">!=</span><span class="n">Sanger</span> <span class="nb">format</span><span class="p">,</span> <span class="nv">@</span><span class="err">=</span><span class="nv">illumina</span> <span class="mf">1.3</span><span class="o">~</span><span class="mf">1.8</span><span class="o">-</span> <span class="nb">format</span><span class="p">,</span> <span class="n">default</span><span class="o">=!</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">qmean</span> <span class="sr">&lt;NUM&gt;</span> <span class="n">peak</span> <span class="n">value</span> <span class="n">of</span> <span class="n">quality</span> <span class="n">score</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">37</span><span class="p">)</span>
</span><span class='line'><span class="o">--</span><span class="n">qsd</span> <span class="sr">&lt;NUM&gt;</span>   <span class="n">standard</span> <span class="n">deviation</span> <span class="n">of</span> <span class="n">quality</span> <span class="n">score</span> <span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">SOLiD</span>
</span><span class='line'><span class="o">--</span><span class="n">header</span> <span class="sr">&lt;CHAR&gt;</span>   <span class="n">sequencing</span> <span class="n">header</span> <span class="n">base</span> <span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="n">G</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>示例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#读长长度202bp，测序错误率为0.001，三种类型（error，insert和deletion）的比重分别为0.5,0.25,0.25，平均质量值35，标准差1.5，质量值表示方式为Sanger类型。</span>
</span><span class='line'><span class="o">--</span><span class="nb">read</span> <span class="mi">202</span> <span class="o">--</span><span class="n">error</span> <span class="mf">0.001</span><span class="p">:</span><span class="mf">0.5</span><span class="p">:</span><span class="mf">0.25</span><span class="p">:</span><span class="mf">0.25</span> <span class="o">--</span><span class="n">qtype</span> <span class="o">!</span> <span class="o">--</span><span class="n">qmean</span> <span class="mi">35</span> <span class="o">--</span><span class="n">qsd</span> <span class="mf">1.5</span>
</span><span class='line'><span class="c1">#读长长度50bp，测序错误率为0.0002，三种类型（error，insert和deletion）的比重分别为0.5,0.25,0.25，平均质量值37，标准差1，SOLiD测序，起始碱基为A。</span>
</span><span class='line'><span class="o">--</span><span class="nb">read</span> <span class="mi">50</span> <span class="o">--</span><span class="n">error</span> <span class="mf">0.0002</span><span class="p">:</span><span class="mf">0.5</span><span class="p">:</span><span class="mf">0.25</span><span class="p">:</span><span class="mf">0.25</span> <span class="o">--</span><span class="n">qmean</span> <span class="mi">37</span> <span class="o">--</span><span class="n">qsd</span> <span class="mi">1</span> <span class="o">--</span><span class="n">header</span> <span class="n">A</span>
</span><span class='line'><span class="err">生成文件：</span>
</span><span class='line'><span class="n">output</span><span class="o">.</span><span class="n">fasta</span><span class="o">--</span><span class="n">Roche</span><span class="err">或</span><span class="n">SOLiD</span><span class="err">的测序</span><span class="n">reads</span><span class="err">文件，一行名称一行序列相间隔，序列名称前以“</span><span class="o">&gt;</span><span class="err">”开头；</span>
</span><span class='line'>    <span class="o">&gt;</span><span class="n">PSim_Roche454</span><span class="mf">.1</span>
</span><span class='line'>    <span class="n">CCTAACCCTAACCCTAACCCTCGCG</span>
</span><span class='line'>    <span class="n">output</span><span class="o">.</span><span class="n">qual</span><span class="o">--</span><span class="n">Roche</span><span class="err">或</span><span class="n">SOLiD</span><span class="err">的测序质量文件，一行名称一行质量值相间隔，序列名称前以“</span><span class="o">&gt;</span><span class="err">”开头，质量值范围</span><span class="mi">0</span><span class="o">~</span><span class="mi">40</span><span class="err">，用数字直接表示；</span>
</span><span class='line'>    <span class="o">&gt;</span><span class="n">PSim_Roche454</span><span class="mf">.1</span>
</span><span class='line'>    <span class="mi">38</span> <span class="mi">38</span> <span class="mi">38</span> <span class="mi">38</span> <span class="mi">38</span> <span class="mi">38</span> <span class="mi">38</span> <span class="mi">38</span> <span class="mi">38</span> <span class="mi">38</span> <span class="mi">38</span> <span class="mi">38</span> <span class="mi">38</span> <span class="mi">38</span> <span class="mi">38</span>
</span><span class='line'>    <span class="n">output</span><span class="o">.</span><span class="n">fastq</span><span class="o">--</span><span class="n">llumina</span> <span class="n">SE</span><span class="err">的测序</span><span class="n">reads</span><span class="err">及质量文件，标准</span><span class="n">fastq</span><span class="err">文件格式；</span>
</span><span class='line'>    <span class="nv">@RachelWu:1:BENM:1:1:7572:10362</span> <span class="mi">0</span><span class="p">:</span><span class="n">N:0:ATCACG</span>
</span><span class='line'>    <span class="n">TCAAACATAAATGAGCAGGCAAGCTGGCTAGAAAACCAC</span>
</span><span class='line'>    <span class="o">+</span>
</span><span class='line'>    <span class="o">=&gt;</span><span class="p">?</span><span class="nv">@AABCDEEEEEEEEEEEEEEDDDDDDDDDDDDDDDD</span>
</span><span class='line'>    <span class="n">output</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="n">fastq</span>    <span class="o">--</span><span class="n">llumina</span> <span class="n">PE</span><span class="err">的测序正向</span><span class="n">reads</span><span class="err">及质量文件，标准</span><span class="n">fastq</span><span class="err">文件格式；</span>
</span><span class='line'>    <span class="n">output</span><span class="o">-</span><span class="mi">2</span><span class="o">.</span><span class="n">fastq</span>    <span class="o">--</span><span class="n">llumina</span> <span class="n">PE</span><span class="err">的测序反向</span><span class="n">reads</span><span class="err">及质量文件，标准</span><span class="n">fastq</span><span class="err">文件格式；</span>
</span><span class='line'>    <span class="n">NameRecordByPSim</span><span class="o">.</span><span class="n">txt</span><span class="o">--</span><span class="n">reads</span><span class="err">名称与其在参考序列上的位置、长度对应关系，第一列为</span><span class="n">reads</span><span class="err">名称，第二列是其在参考序列上的位置信息，包括：参考序列名称、</span><span class="n">reads</span><span class="err">编号、</span><span class="n">fragment</span><span class="err">在参考序列上的起始位点、终止位点、长度</span>
</span><span class='line'>    <span class="o">&gt;</span><span class="n">RachelWu_1_1_0</span>  <span class="n">chromosomeGRCh37</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="mi">1040010</span><span class="n">bp</span> <span class="mi">0</span> <span class="n">start</span><span class="o">=</span><span class="mi">744403</span> <span class="n">end</span><span class="o">=</span><span class="mi">744493</span> <span class="nb">length</span><span class="o">=</span><span class="mi">91</span>
</span><span class='line'>    <span class="n">SNPReportByPSim</span><span class="o">.</span><span class="n">txt</span><span class="o">--</span><span class="err">生成的</span><span class="n">SNP</span><span class="err">信息，每列信息分别是参考序列名称、</span><span class="n">SNP</span><span class="err">位点、突变前碱基、突变后碱基</span>
</span><span class='line'>    <span class="n">chromosomeGRCh37</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="mi">1040010</span><span class="n">bp</span>  <span class="mi">389093</span>  <span class="n">C</span>    <span class="n">A</span>
</span><span class='line'>    <span class="n">SVReportByPSim</span><span class="o">.</span><span class="n">txt</span><span class="o">--</span><span class="err">生成的</span><span class="n">SV</span><span class="err">信息，</span>
</span><span class='line'>    <span class="n">chromosomeGRCh37</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="mi">1040010</span><span class="n">bp</span>  <span class="n">inversion</span>    <span class="mi">240285</span>  <span class="mi">2896</span>
</span><span class='line'>    <span class="n">chromosomeGRCh37</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="mi">1040010</span><span class="n">bp</span>  <span class="n">deletion</span> <span class="mi">641559</span>  <span class="mi">2205</span>
</span><span class='line'>    <span class="n">chromosomeGRCh37</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="mi">1040010</span><span class="n">bp</span>  <span class="n">translocation</span>    <span class="mi">533138</span>  <span class="mi">2394</span>    <span class="mi">405275</span>
</span><span class='line'>    <span class="n">chromosomeGRCh37</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="mi">1040010</span><span class="n">bp</span>  <span class="n">inversion</span>    <span class="mi">565987</span>  <span class="mi">3117</span>
</span><span class='line'>    <span class="n">chromosomeGRCh37</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="mi">1040010</span><span class="n">bp</span>  <span class="n">inserion</span>
</span><span class='line'>    <span class="n">MutationByPSim</span><span class="o">.</span><span class="n">txt</span><span class="o">--</span><span class="err">损伤</span><span class="n">DNA</span><span class="err">测序模拟生成的损伤信息，每列信息分别是参考序列名称、</span><span class="n">reads</span><span class="err">信息编号、突变位点、突变前碱基、突变后碱基</span>
</span><span class='line'>    <span class="n">chromosomeGRCh37</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="mi">1040010</span><span class="n">bp</span>  <span class="mi">576</span><span class="o">-</span><span class="mi">2</span>    <span class="mi">1</span>   <span class="n">C</span>    <span class="n">T</span>
</span><span class='line'>    <span class="n">chromosomeGRCh37</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="mi">1040010</span><span class="n">bp</span>  <span class="mi">576</span><span class="o">-</span><span class="mi">2</span>    <span class="mi">59</span>  <span class="n">G</span>    <span class="n">C</span>
</span><span class='line'>    <span class="n">chromosomeGRCh37</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="mi">1040010</span><span class="n">bp</span>  <span class="mi">580</span><span class="o">-</span><span class="mi">2</span>    <span class="mi">47</span>  <span class="n">T</span>    <span class="n">G</span>
</span></code></pre></td></tr></table></div></figure>


<h3>例子</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#用默认参数生成Illumina测序数据，生成的文件存放于PSim/output文件夹中</span>
</span><span class='line'><span class="n">perl</span> <span class="n">PSim</span><span class="o">.</span><span class="n">pl</span> <span class="n">illumina</span> <span class="err">–</span><span class="o">-</span><span class="nb">ref</span> <span class="o">..</span><span class="sr">/example/</span><span class="n">example</span><span class="o">.</span><span class="n">fa</span> <span class="err">–</span><span class="o">-</span><span class="n">dir</span> <span class="o">../</span><span class="n">output</span>
</span><span class='line'><span class="c1">#用默认参数生成Roche测序数据，生成的文件存放于PSim/output文件夹中</span>
</span><span class='line'><span class="n">perl</span> <span class="n">PSim</span><span class="o">.</span><span class="n">pl</span> <span class="n">roche</span> <span class="err">–</span><span class="o">-</span><span class="nb">ref</span> <span class="o">..</span><span class="sr">/example/</span><span class="n">example</span><span class="o">.</span><span class="n">fa</span> <span class="err">–</span><span class="o">-</span><span class="n">dir</span> <span class="o">../</span><span class="n">output</span>
</span><span class='line'><span class="c1">#用默认参数生成SOLiD测序数据，生成的文件存放于PSim/output文件夹中</span>
</span><span class='line'><span class="n">perl</span> <span class="n">PSim</span><span class="o">.</span><span class="n">pl</span> <span class="n">solid</span> <span class="err">–</span><span class="o">-</span><span class="nb">ref</span> <span class="o">..</span><span class="sr">/example/</span><span class="n">example</span><span class="o">.</span><span class="n">fa</span> <span class="err">–</span><span class="o">-</span><span class="n">dir</span> <span class="o">../</span><span class="n">output</span>
</span><span class='line'><span class="c1">#用示例参考序列生成15倍覆盖度、Illumina测序方法、PE测序、无SV及SNP变异、</span>
</span><span class='line'><span class="n">perl</span> <span class="n">PSim</span><span class="o">.</span><span class="n">pl</span> <span class="n">illumina</span> <span class="err">–</span><span class="nb">ref</span> <span class="o">..</span><span class="sr">/example/</span><span class="n">example</span><span class="o">.</span><span class="n">fa</span> <span class="err">–</span><span class="n">cov</span> <span class="mi">15</span> <span class="err">–</span><span class="n">sv</span> <span class="mi">0</span> <span class="err">–</span><span class="n">snp</span> <span class="mi">0</span> <span class="err">–</span><span class="o">-</span><span class="n">dir</span> <span class="o">../</span><span class="n">output</span>
</span></code></pre></td></tr></table></div></figure>


<p>   <br/>
A  SV</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="mi">1</span><span class="o">.</span> <span class="n">Based</span> <span class="n">on</span> <span class="n">ancestral</span> <span class="n">diploid</span> <span class="n">reference</span><span class="p">(</span><span class="o">~</span><span class="mi">1</span><span class="n">Mb</span><span class="p">),</span> <span class="n">simulate</span> <span class="n">a</span> <span class="n">children</span> <span class="n">sequence</span> <span class="n">with</span> <span class="n">SVs</span><span class="p">,</span> <span class="n">including</span> <span class="n">mentioned</span> <span class="n">above</span><span class="o">.</span>
</span><span class='line'><span class="mi">2</span><span class="o">.</span> <span class="n">Fragment</span> <span class="n">to</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">500</span><span class="p">,</span> <span class="mi">1000</span><span class="n">bp</span> <span class="n">hierarchical</span> <span class="n">insert</span> <span class="n">size</span> <span class="n">library</span><span class="p">,</span> <span class="n">insert</span> <span class="n">span</span> <span class="n">s</span><span class="o">.</span><span class="n">d</span><span class="o">.</span> <span class="o">&lt;</span><span class="mi">35</span><span class="p">;</span> <span class="mi">10</span> <span class="n">folds</span> <span class="k">for</span> <span class="nb">each</span> <span class="n">library</span><span class="o">.</span>
</span><span class='line'><span class="mi">3</span><span class="o">.</span> <span class="n">Used</span> <span class="n">these</span> <span class="n">reads</span> <span class="k">for</span> <span class="n">denovo</span> <span class="n">assembly</span> <span class="n">to</span> <span class="n">be</span> <span class="n">a</span> <span class="n">bunch</span> <span class="n">of</span> <span class="n">contigs</span> <span class="ow">or</span> <span class="n">scaffolds</span> <span class="p">(</span><span class="n">using</span> <span class="n">SOAPdenovo</span> <span class="ow">or</span> <span class="n">Phusion</span><span class="o">-</span><span class="n">meta</span> <span class="ow">or</span> <span class="n">CA</span> <span class="ow">or</span> <span class="n">Velvet</span><span class="p">)</span>
</span><span class='line'><span class="mi">4</span><span class="o">.</span> <span class="n">Mapped</span> <span class="n">these</span> <span class="n">reads</span> <span class="ow">and</span> <span class="n">contigs</span> <span class="n">to</span> <span class="n">reference</span><span class="p">;</span>
</span><span class='line'><span class="mi">5</span><span class="o">.</span> <span class="n">Using</span> <span class="n">SV</span> <span class="n">detector</span> <span class="n">to</span> <span class="n">find</span> <span class="n">SV</span><span class="p">;</span>
</span><span class='line'><span class="mi">6</span><span class="o">.</span> <span class="n">Draw</span> <span class="n">module</span> <span class="ow">and</span> <span class="n">diagnostic</span> <span class="n">depicted</span> <span class="n">figures</span><span class="p">,</span> <span class="ow">and</span> <span class="n">validation</span><span class="o">/</span><span class="n">evaluation</span> <span class="p">(</span><span class="n">FP</span><span class="p">,</span> <span class="n">FN</span><span class="p">,</span> <span class="n">TP</span><span class="p">,</span> <span class="n">TN</span><span class="p">,</span> <span class="n">Sn</span><span class="p">,</span> <span class="n">Sp</span><span class="p">,</span> <span class="n">CC</span><span class="p">,</span> <span class="n">ACP</span><span class="p">,</span> <span class="n">AC</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>B  Paleogenomics</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="mi">1</span><span class="o">.</span> <span class="n">Based</span> <span class="n">on</span> <span class="n">ancestral</span> <span class="n">diploid</span> <span class="n">reference</span><span class="p">(</span><span class="o">~</span><span class="mi">1</span><span class="n">Mb</span><span class="p">),</span> <span class="n">simulate</span> <span class="n">a</span> <span class="n">children</span> <span class="n">sequence</span> <span class="n">with</span> <span class="n">SNPs</span><span class="o">/</span><span class="n">InDels</span> <span class="n">with</span> <span class="n">same</span> <span class="n">most</span> <span class="n">part</span> <span class="n">of</span> <span class="n">same</span> <span class="n">locus</span> <span class="n">as</span> <span class="n">dbSNP</span><span class="p">,</span> <span class="ow">and</span> <span class="n">parts</span> <span class="n">of</span> <span class="n">private</span> <span class="n">diversity</span> <span class="p">(</span><span class="o">~</span><span class="mi">0</span><span class="o">.!</span><span class="nv">%</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'><span class="mi">2</span><span class="o">.</span> <span class="n">Fragment</span> <span class="n">to</span> <span class="mi">30</span><span class="o">~</span><span class="mi">200</span><span class="n">bp</span> <span class="n">with</span> <span class="n">overhanding</span> <span class="ow">or</span> <span class="n">only</span> <span class="n">single</span> <span class="n">strand</span> <span class="n">DNA</span><span class="p">;</span>
</span><span class='line'><span class="mi">3</span><span class="o">.</span> <span class="n">Add</span> <span class="n">damage</span> <span class="n">by</span> <span class="n">nucleotide</span> <span class="n">substitution</span> <span class="n">according</span> <span class="n">to</span> <span class="n">training</span> <span class="n">stochastic</span> <span class="n">matrix</span><span class="p">;</span>
</span><span class='line'><span class="mi">4</span><span class="o">.</span> <span class="n">PCR</span> <span class="n">duplication</span><span class="p">,</span> <span class="o">~</span><span class="mi">1000</span><span class="n">x</span><span class="o">.</span>
</span><span class='line'><span class="mi">5</span><span class="o">.</span> <span class="n">Sequencing</span> <span class="n">with</span> <span class="n">sequencing</span> <span class="n">errors</span> <span class="p">(</span><span class="o">~</span><span class="mi">1</span><span class="nv">%</span><span class="p">)</span> <span class="k">for</span> <span class="nb">each</span> <span class="n">reads</span> <span class="n">via</span> <span class="n">stochastic</span> <span class="n">probability</span><span class="o">.</span>
</span><span class='line'><span class="mi">6</span><span class="o">.</span>  <span class="n">Mapped</span> <span class="n">these</span> <span class="n">reads</span> <span class="n">to</span> <span class="n">reference</span><span class="p">;</span>
</span><span class='line'><span class="mi">5</span><span class="o">.</span> <span class="n">Using</span> <span class="n">GATE</span> <span class="n">to</span> <span class="n">called</span> <span class="n">variation</span><span class="p">;</span>
</span><span class='line'><span class="mi">6</span><span class="o">.</span> <span class="n">Find</span> <span class="n">damage</span> <span class="p">(</span><span class="n">I</span> <span class="n">will</span> <span class="k">do</span> <span class="n">this</span> <span class="n">part</span><span class="p">);</span>
</span><span class='line'><span class="mi">7</span><span class="o">.</span> <span class="n">Draw</span> <span class="n">figures</span> <span class="k">for</span> <span class="n">evaluating</span> <span class="n">DNA</span> <span class="n">damage</span><span class="p">,</span> <span class="ow">and</span> <span class="n">their</span> <span class="n">distribution</span> <span class="n">compared</span> <span class="n">to</span> <span class="n">design</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pod写法]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/04/17/podxie-fa/"/>
    <updated>2014-04-17T19:05:28+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/04/17/podxie-fa</id>
    <content type="html"><![CDATA[<h3>pod简介</h3>

<p>pod是plain old documentaton的缩写，它可以独立存在或者与代码混合在一起形成嵌入的文档。pod简单易写，有足够的标记格式。pod解决了程序员写程序和写文档并行工作问题，并且它可以转换成多种打印格式。</p>

<!--more-->


<p>pod文档起始标志：<code>=pod</code>，也可以在perl代码中任何位置以一个等号和一个标示符开头，比如</p>

<pre><code>=head1 Here There Be Pods!
</code></pre>

<p>pod结束标志：<code>=cut</code>，从pod起始标志到结束标志之间所有文本都会被忽略。这个标志一定不能忘记写，否则整篇代码都会被认为是注释信息。</p>

<h3>各级标题</h3>

<p>以下标示符后面的文字分别以一、二、三、四级标记显示：</p>

<pre><code>=head1  
=head2  
=head3  
=head4  
</code></pre>

<h3>文本格式</h3>

<ul>
<li><code>I&lt;text&gt;</code> 斜体</li>
<li><code>B&lt;text&gt;</code> 黑体</li>
<li><code>C&lt;code&gt;</code> 代码块</li>
<li><code>L&lt;text|name&gt;</code> 超链接（个人觉得这个用处不是很大，有需要的可以自行查阅文章后面的参考资料）</li>
<li><code>E&lt;escape&gt;</code> 转义字符

<ul>
<li><code>E&lt;lt&gt;</code>     &lt;</li>
<li><code>E&lt;gt&gt;</code>     ></li>
<li><code>E&lt;sol&gt;</code>    /</li>
<li><code>E&lt;verbar&gt;</code> |</li>
</ul>
</li>
</ul>


<h3>列表</h3>

<p>列表表示形式如下：</p>

<pre><code>=over NUMBER
=item SYBOL
=back
</code></pre>

<p><code>=over</code>标示列表段落的开始，“NUMBER”标示缩进数目，也可以不写。<code>=item</code>后面写列表形式，可选择的有：</p>

<ul>
<li>项目列表：*</li>
<li>序号列表：数字1、2、3&hellip;&hellip;</li>
<li>命名列表：以字符串命名</li>
</ul>


<p>例如：</p>

<pre><code>=item *
=item 1
=item foo
</code></pre>

<p>具体使用方法请看文章最后的例子。需要注意的是：<code>=over</code>、<code>=item</code>、<code>=back</code>三者要一起使用，<code>=over</code>和<code>=back</code>中间至少要有一个<code>=item</code>，而且要保持列表item（项）的一致性。</p>

<h3>代码块</h3>

<p>字面段落以空格或者水平制表符字符开头，翻译器会定义该段文字是代码，以等宽字体显示。并且假定水平制表符为八个空格宽。在代码块种不能使用斜体或粗体。</p>

<h3>插入其他编程语言</h3>

<p>格式为：</p>

<pre><code>=for TRANSLATOR

=begin TRANSLATOR
=end TRANSLATOR
</code></pre>

<p><code>=for</code>和后两者组合的作用相同，都是对此段落使用特殊的格式（如html、text），只有使用这种格式转换的时候才会读取，比如设定格式为html，那么pod2text就会忽略<code>=begin html</code>和<code>=end html</code>之间的内容。
区别在于<code>=for</code>只作用于本段落余下的部分，而<code>=begin</code>和<code>=end</code>可以处理中间包含的多个段落。<br/>
可以接受的格式有：roff，man，troff，nroff，tbl，eqn，latex，tex，html和text。</p>

<h3>EXAMPLE</h3>

<p>用<code>pod2html</code>转化后的<a href="http://rachelwxm.github.io/pod-test.html" target="_blank">效果</a>。</p>

<pre><code>=pod

=head1 Pod Format

=head2 Font format

in the next, I'll try font format. 

I&lt;italics&gt;

B&lt;bold&gt;

C&lt;code&gt;

E&lt;lt&gt;bE&lt;gt&gt; etc.


=head2 List 

=head3 Bullet

=over 4

=item *
Mithril armor

=item *
oELven cloak  

=back

=head3 Number List

=over 4

=item 1
Mithril armor

=item 2
oELven cloak  

=back

=head3 Name List

=over

=item foo
FOOwhat

=item bar
BARwhat

=back

=head2 Code Block

  if($Strand eq "+")
  {
    foreach(@se)
    {
        my ($start,$end)=split /\,/;
        $transcript.=substr($SEQUENCE,$start,($end-$start+1));
    }
  }


=head2 Translator

=head3 html

=begin html

&lt;br&gt;Figure 1.&lt;IMG SRC="https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRkoUhnTy_gEx-sFVAVBZhyukmAU1mqdRlZu3ndDoa1Zhp-5d28"&gt;&lt;Br&gt;

=end html


=cut
</code></pre>

<h2><strong>参考资料</strong></h2>

<p>[1]fayland.(2005-01-14)怎么写POD  <br/>
<a href="http://www.fayland.org/journal/POD.html">http://www.fayland.org/journal/POD.html</a>  <br/>
[2]perl语言编程(大骆驼). p682-p693<br/>
[3]<a href="http://zh.wikipedia.org/zh-cn/POD_(%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1)" target="_blank">POD (程序设计) &ndash; 维基百科</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R-函数]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/04/14/r-han-shu/"/>
    <updated>2014-04-14T17:37:39+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/04/14/r-han-shu</id>
    <content type="html"><![CDATA[<h5><em>Computing for Data Analysis, week2-Functions</em></h5>

<h3>函数构建(Function)</h3>

<p>通过function()自定义函数，构建格式为：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>f<span class="o">&lt;-</span><span class="kr">function</span><span class="p">(</span><span class="o">&lt;</span>arguments<span class="o">&gt;</span><span class="p">){</span>
</span><span class='line'>  <span class="c1">##do sth </span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>示例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span>echo<span class="o">&lt;-</span><span class="kr">function</span><span class="p">(</span>x<span class="p">)</span>    <span class="c1">#定义名为echo的函数</span>
</span><span class='line'><span class="o">+</span><span class="p">{</span>
</span><span class='line'><span class="o">+</span>  print<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'><span class="o">+</span>  str<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'><span class="o">+</span><span class="p">}</span>
</span><span class='line'><span class="o">&gt;</span>z<span class="o">=</span><span class="m">1</span><span class="o">:</span><span class="m">3</span>
</span><span class='line'><span class="o">&gt;</span>echo<span class="p">(</span>z<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span>
</span><span class='line'> int <span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">3</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span>
</span></code></pre></td></tr></table></div></figure>


<h3>函数参数(Function Arguments)</h3>

<ul>
<li><code>formals()</code>查看指定函数的参数，结果将以list形式返回</li>
<li><code>args()</code>以简化的显示方式返回函数参数</li>
</ul>


<h3>参数匹配(Argument Matching)</h3>

<p>对于任何一个有名字的参数(named argument)，所以使用函数时有名字参数的引用顺序对结果没有影响。以下调用函数的语句具有同样的作用。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> mydata <span class="o">&lt;-</span> rnorm<span class="p">(</span><span class="m">100</span><span class="p">)</span>         <span class="c1">#生成一组随机数</span>
</span><span class='line'><span class="o">&gt;</span> sd
</span><span class='line'><span class="kr">function</span> <span class="p">(</span>x<span class="p">,</span> na.rm <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span>    <span class="c1">#函数sd有两个参数，na.rm有默认参数</span>
</span><span class='line'><span class="o">&gt;</span> sd<span class="p">(</span>mydata<span class="p">)</span>                   <span class="c1">#按顺序将第一个值赋给“x”</span>
</span><span class='line'><span class="o">&gt;</span> sd<span class="p">(</span>x <span class="o">=</span> mydata<span class="p">)</span>               <span class="c1">#按名字赋值</span>
</span><span class='line'><span class="o">&gt;</span> sd<span class="p">(</span>x <span class="o">=</span> mydata<span class="p">,</span> na.rm <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span> <span class="c1">#按名字赋值，因为na.rm的默认值也是FALSE，所以可写可不写</span>
</span><span class='line'><span class="o">&gt;</span> sd<span class="p">(</span>na.rm <span class="o">=</span> <span class="kc">FALSE</span><span class="p">,</span> x <span class="o">=</span> mydata<span class="p">)</span> <span class="c1">#指定名字赋值，调换顺序没有影响</span>
</span><span class='line'><span class="o">&gt;</span> sd<span class="p">(</span>na.rm <span class="o">=</span> <span class="kc">FALSE</span><span class="p">,</span> mydata<span class="p">)</span>     <span class="c1">#第一个参数指定名字，未指定名称的输入值自动赋给尚未赋值的第一个参数x</span>
</span></code></pre></td></tr></table></div></figure>


<p>函数参数赋值顺序在多参数函数中体现的更加明显。无名称输入值将按照瞬息自动分配给尚未指定值的参数。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> args<span class="p">(</span>lm<span class="p">)</span>
</span><span class='line'><span class="kr">function</span> <span class="p">(</span>formula<span class="p">,</span> data<span class="p">,</span> subset<span class="p">,</span> weights<span class="p">,</span> na.action<span class="p">,</span>
</span><span class='line'>  method <span class="o">=</span> <span class="s">&quot;qr&quot;</span><span class="p">,</span> model <span class="o">=</span> <span class="kc">TRUE</span><span class="p">,</span> x <span class="o">=</span> <span class="kc">FALSE</span><span class="p">,</span>
</span><span class='line'>  y <span class="o">=</span> <span class="kc">FALSE</span><span class="p">,</span> qr <span class="o">=</span> <span class="kc">TRUE</span><span class="p">,</span> singular.ok <span class="o">=</span> <span class="kc">TRUE</span><span class="p">,</span>
</span><span class='line'>  contrasts <span class="o">=</span> <span class="kc">NULL</span><span class="p">,</span> offset<span class="p">,</span> <span class="kc">...</span><span class="p">)</span>
</span><span class='line'><span class="c1">#下面两种引用方式具有相同效果</span>
</span><span class='line'><span class="o">&gt;</span>lm<span class="p">(</span>data <span class="o">=</span> mydata<span class="p">,</span> y <span class="o">~</span> x<span class="p">,</span> model <span class="o">=</span> <span class="kc">FALSE</span><span class="p">,</span> <span class="m">1</span><span class="o">:</span><span class="m">100</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span>lm<span class="p">(</span>y <span class="o">~</span> x<span class="p">,</span> mydata<span class="p">,</span> <span class="m">1</span><span class="o">:</span><span class="m">100</span><span class="p">,</span> model <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>惰性求值(Lazy Evaluation)</h3>

<p>惰性求值的原则是除非有需要，否则不计算，所以有名字的参数也不一定会被使用。例如一下函数定义及使用中不会报错。</p>

<blockquote><p>The lazy evaluation applies because the argument is only evaluated when it&rsquo;s needed.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span>f<span class="o">&lt;-</span><span class="kr">function</span><span class="p">(</span>a<span class="p">,</span>b<span class="p">){</span>    <span class="c1">#定义函数f，有两个命名参数</span>
</span><span class='line'><span class="o">+</span>  a<span class="o">^</span><span class="m">2</span>
</span><span class='line'><span class="o">+</span><span class="p">}</span>
</span><span class='line'><span class="o">&gt;</span>f<span class="p">(</span><span class="m">2</span><span class="p">)</span>
</span><span class='line'><span class="m">4</span>
</span></code></pre></td></tr></table></div></figure>


<p>因为函数f没有用到参数b，所以即使b没有默认参数而且没有输入参数，程序依然不会报错。另外一个例子：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span>f <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>a<span class="p">,</span> b<span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="o">+</span>  print<span class="p">(</span>a<span class="p">)</span>
</span><span class='line'><span class="o">+</span>  print<span class="p">(</span>b<span class="p">)</span>
</span><span class='line'><span class="o">+</span><span class="p">}</span>
</span><span class='line'><span class="o">&gt;</span> f<span class="p">(</span><span class="m">45</span><span class="p">)</span>        <span class="c1">#执行函数f，因为只输入了一个参数值，按顺序将赋值给参数a，参数b没有值</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">45</span>
</span><span class='line'>Error <span class="kr">in</span> print<span class="p">(</span>b<span class="p">)</span> <span class="o">:</span> argument <span class="s">&quot;b&quot;</span> is missing<span class="p">,</span> with no default
</span></code></pre></td></tr></table></div></figure>


<p>注意到“45”先于报错信息打印出来，这是因为关于参数b的运算是在运行<code>print(a)</code>语句之后。</p>

<h3>点点点参数(Three-dots Argument or &ldquo;&hellip;&rdquo; Argument)</h3>

<p>&hellip;参数表示一系列用于传递到其他函数的可变数目的参数。</p>

<ul>
<li>任意参数(Arbitrary arguments)</li>
</ul>


<p>以函数<code>c</code>和<code>list</code>为例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> c
</span><span class='line'><span class="kr">function</span> <span class="p">(</span><span class="kc">...</span><span class="p">,</span> recursive <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span>  .Primitive<span class="p">(</span><span class="s">&quot;c&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> list
</span><span class='line'><span class="kr">function</span> <span class="p">(</span><span class="kc">...</span><span class="p">)</span>  .Primitive<span class="p">(</span><span class="s">&quot;list&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>这两个函数都允许用户输入随意数目参数，并且可以有用户命名这些参数。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> c<span class="p">(</span>a<span class="o">=</span><span class="m">42</span><span class="p">,</span> <span class="m">73.9</span><span class="p">,</span> c<span class="o">=</span><span class="kc">NA</span><span class="p">)</span>
</span><span class='line'>   a         c
</span><span class='line'><span class="m">42.0</span> <span class="m">73.9</span>   <span class="kc">NA</span>
</span><span class='line'><span class="o">&gt;</span> names<span class="p">(</span>.Last.value<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;a&quot;</span> <span class="s">&quot;&quot;</span>  <span class="s">&quot;c&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>传递参数(Passing arguments on)
当函数中嵌套其他函数，而你不想复制嵌套函数中所有的参数列表时，可以使用&hellip;参数。</li>
</ul>


<p>需要注意的是在“&hellip;”之后的参数必须使用参数名字赋值。</p>

<h3><strong>参考资料</strong></h3>

<p>[1]慕容飞宇. (2012-11-03) R 函数.  <br/>
<a href="http://jiaoyan.org/r/?page_id=1091">http://jiaoyan.org/r/?page_id=1091</a> <br/>
[2]Burns. (2013-01-30) The three-dots construct in R.   <br/>
<a href="http://www.burns-stat.com/the-three-dots-construct-in-r/">http://www.burns-stat.com/the-three-dots-construct-in-r/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R的控制结构]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/04/13/rde-kong-zhi-jie-gou/"/>
    <updated>2014-04-13T16:40:50+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/04/13/rde-kong-zhi-jie-gou</id>
    <content type="html"><![CDATA[<h5><em>Computing for Data Analysis, week2-Control Structures</em></h5>

<p>与其他编程语言一样，R也有多种循环控制结构，比如：if/else判断语句、for循环、while循环、repeat重复结构等。</p>

<!--more-->


<h3>if</h3>

<p><code>if</code>判断语句可单独使用或结合<code>else</code>一起使用：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span><span class="kr">if</span><span class="p">(</span><span class="o">&lt;</span>condition<span class="o">&gt;</span><span class="p">){</span> <span class="c1">##do sth}  #单独使用if</span>
</span><span class='line'><span class="o">&gt;</span><span class="kr">if</span><span class="p">(</span><span class="o">&lt;</span>condition<span class="o">&gt;</span><span class="p">){</span>
</span><span class='line'><span class="o">+</span> <span class="c1">##do sth</span>
</span><span class='line'><span class="o">+</span><span class="p">}</span> <span class="kr">else</span> <span class="kr">if</span><span class="p">(</span><span class="o">&lt;</span>condition2<span class="o">&gt;</span><span class="p">){</span>    <span class="c1">#结合else，分条件判断、执行</span>
</span><span class='line'><span class="o">+</span>  <span class="c1">##do sth else</span>
</span><span class='line'><span class="o">+</span> <span class="p">}</span><span class="kr">else</span><span class="p">{</span>
</span><span class='line'><span class="o">+</span>  <span class="c1">##do sth else</span>
</span><span class='line'><span class="o">+</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>实例</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="kr">if</span><span class="p">(</span>x<span class="o">&gt;</span><span class="m">3</span><span class="p">){</span>    <span class="c1">#如果x大于3,则给y赋值10;否则给y赋值0</span>
</span><span class='line'>  y<span class="o">&lt;-</span><span class="m">10</span>
</span><span class='line'><span class="p">}</span><span class="kr">else</span><span class="p">{</span>
</span><span class='line'>  y<span class="o">&lt;-</span><span class="m">0</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>for</h3>

<p>R的<code>for</code>循环架构如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span><span class="kr">for</span><span class="p">(</span>name <span class="kr">in</span> expr1<span class="p">)</span> <span class="p">{</span>expr2<span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中name是循环变量，expr1是一个向量表达式，用来给name赋值，常用的数据结构有list、vector等；expr2是循环中运行的语句。一个简单的实例如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="kr">for</span><span class="p">(</span>i <span class="kr">in</span> <span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">){</span>    <span class="c1">#i是循环变量，1：10是i取值的向量表达式</span>
</span><span class='line'>  print<span class="p">(</span>i<span class="p">)</span>       <span class="c1">#expr2</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>循环变量还可以像下面这样写，如下几个循环有同样的效果：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span>x<span class="o">&lt;-</span>c<span class="p">(</span><span class="s">&quot;a&quot;</span><span class="p">,</span><span class="s">&quot;b&quot;</span><span class="p">,</span><span class="s">&quot;c&quot;</span><span class="p">,</span><span class="s">&quot;d&quot;</span><span class="p">)</span>   <span class="c1">#给向量x赋值</span>
</span><span class='line'><span class="o">&gt;</span><span class="kr">for</span><span class="p">(</span>i <span class="kr">in</span> <span class="m">1</span><span class="o">:</span><span class="m">4</span><span class="p">){</span>          <span class="c1">#常规写法，给循环变量一个新的赋值表达式1:4</span>
</span><span class='line'><span class="o">+</span>  print<span class="p">(</span>x<span class="p">[</span>i<span class="p">])</span>          <span class="c1">#打印出向量x中对应位置的值</span>
</span><span class='line'><span class="o">+</span><span class="p">}</span>
</span><span class='line'><span class="o">&gt;</span><span class="kr">for</span><span class="p">(</span>i <span class="kr">in</span> seq_along<span class="p">(</span>x<span class="p">)){</span> <span class="c1">#seq_along()是一个函数，会构建一个从1开始和输入向量同等长度的整数向量，不清楚的话可以在R中输入“?seq_along()”看看函数用法</span>
</span><span class='line'><span class="o">+</span>  print<span class="p">(</span>x<span class="p">[</span>i<span class="p">])</span>
</span><span class='line'><span class="o">+</span><span class="p">}</span>
</span><span class='line'><span class="o">&gt;</span><span class="kr">for</span><span class="p">(</span>letter <span class="kr">in</span> x<span class="p">){</span>       <span class="c1">#letter直接在向量x中取值，与perl的foreach $letter(@x){}是一个意思</span>
</span><span class='line'><span class="o">+</span>  print<span class="p">(</span>letter<span class="p">)</span>
</span><span class='line'><span class="o">+</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>R也允许使用嵌套循环，比如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span>x <span class="o">&lt;-</span> matrix<span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">6</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">3</span><span class="p">)</span>          <span class="c1">#新建矩阵x，并赋值</span>
</span><span class='line'><span class="o">&gt;</span><span class="kr">for</span><span class="p">(</span>i <span class="kr">in</span> seq_len<span class="p">(</span>nrow<span class="p">(</span>x<span class="p">)))</span> <span class="p">{</span>    <span class="c1">#seq_len(nrow(x))返回的向量值是1 2，也就是矩阵x的行数</span>
</span><span class='line'><span class="o">+</span>  <span class="kr">for</span><span class="p">(</span>j <span class="kr">in</span> seq_len<span class="p">(</span>ncol<span class="p">(</span>x<span class="p">)))</span> <span class="p">{</span>
</span><span class='line'><span class="o">+</span>      print<span class="p">(</span>x<span class="p">[</span>i<span class="p">,</span> j<span class="p">])</span>           <span class="c1">#先按行、再按列打印出矩阵x的值</span>
</span><span class='line'><span class="o">+</span>  <span class="p">}</span>
</span><span class='line'><span class="o">+</span><span class="p">}</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">3</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">5</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">2</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">4</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">6</span>
</span></code></pre></td></tr></table></div></figure>


<h3>while</h3>

<p><code>while</code>循环执行之前先判定设置条件是否为真，是则执行循环内容，再次判定设置条件是否为真；否则跳出循环。使用语法为<code>while(&lt;expr1&gt;){expr2}</code>，若expr1运算结果成立，则执行expr2。需要注意的是要保证在有限循环次数内是expr1不成立，即不要陷入死循环中。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span>count<span class="o">&lt;-</span><span class="m">0</span>            <span class="c1">#给count赋值为0</span>
</span><span class='line'><span class="o">&gt;</span><span class="kr">while</span><span class="p">(</span>count<span class="o">&lt;</span><span class="m">10</span><span class="p">){</span>    <span class="c1">#括号中的内容“count&lt;10”是判定条件，判定条件可以是单一表达式，也可以是多个表达式的逻辑运算结果</span>
</span><span class='line'><span class="o">+</span>  print<span class="p">(</span>count<span class="p">)</span>     <span class="c1">#打印结果为从0至9共10个数字</span>
</span><span class='line'><span class="o">+</span>  count<span class="o">&lt;-</span>count<span class="m">+1</span>   <span class="c1">#每执行一次循环，count加1</span>
</span><span class='line'><span class="o">+</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>repeat</h3>

<p><code>repeat</code>是一个无限重复的循环，退出的<code>repeat</code>循环的唯一方法是使用<code>break</code>语句。使用repeat会有一些危险，因为无法保证它一定会终止，很容易陷入到无限循环中。如果一定要使用，建议用更加严格的条件控制。示例如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span>z<span class="o">&lt;-</span><span class="m">5</span>
</span><span class='line'><span class="o">&gt;</span>count<span class="o">&lt;-</span><span class="m">1</span>
</span><span class='line'><span class="o">&gt;</span><span class="kr">repeat</span><span class="p">{</span>
</span><span class='line'><span class="o">+</span>  print<span class="p">(</span>z<span class="p">)</span>
</span><span class='line'><span class="o">+</span>  coin<span class="o">&lt;-</span>rbinom<span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">0.5</span><span class="p">)</span>  <span class="c1">#生成一个随机数coin</span>
</span><span class='line'><span class="o">+</span>  <span class="kr">if</span><span class="p">(</span>z<span class="o">&lt;</span><span class="m">3</span> <span class="o">||</span> z<span class="o">&gt;</span><span class="m">10</span><span class="p">){</span>       <span class="c1">#判定条件是否成立，若成立则跳出repeat循环</span>
</span><span class='line'><span class="o">+</span>      <span class="kr">break</span>
</span><span class='line'><span class="o">+</span>  <span class="p">}</span><span class="kr">else</span><span class="p">{</span>
</span><span class='line'><span class="o">+</span>      <span class="kr">if</span><span class="p">(</span>coin <span class="o">==</span><span class="m">1</span> <span class="p">){</span>z<span class="o">&lt;-</span>z<span class="m">+1</span><span class="p">}</span>
</span><span class='line'><span class="o">+</span>      <span class="kr">else</span><span class="p">{</span>z<span class="o">&lt;-</span>z<span class="m">-1</span><span class="p">}</span>
</span><span class='line'><span class="o">+</span>  <span class="p">}</span>
</span><span class='line'><span class="o">+</span>  <span class="kr">if</span><span class="p">(</span>count<span class="o">&gt;</span><span class="m">10000</span><span class="p">){</span><span class="kr">break</span><span class="p">}</span> <span class="c1">#设定一个循环的最大次数，保证程序不会跑死</span>
</span><span class='line'><span class="o">+</span>  count<span class="o">&lt;-</span>count<span class="m">+1</span>
</span><span class='line'><span class="o">+</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>next和return</h3>

<p><code>next</code>用来跳过当前循环，执行下一个循环；return跳出循环结构并返回一个值。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span><span class="kr">for</span><span class="p">(</span>i <span class="kr">in</span> <span class="m">1</span><span class="o">:</span><span class="m">100</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="o">+</span>  <span class="kr">if</span><span class="p">(</span>i <span class="o">&lt;=</span> <span class="m">20</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="o">+</span>      <span class="kr">next</span>      <span class="c1">#跳过前20个循环</span>
</span><span class='line'><span class="o">+</span>  <span class="p">}</span>
</span><span class='line'><span class="o">+</span>  <span class="c1">## Do something here</span>
</span><span class='line'><span class="o">+</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读入数据]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/01/21/reading-and-writing-data-1/"/>
    <updated>2014-01-21T02:11:15+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/01/21/reading-and-writing-data-1</id>
    <content type="html"><![CDATA[<h5><em>Computing for Data Analysis, week1-Reading and Writing Data</em></h5>

<h3>读入数据(Reading and Writing Data)</h3>

<p>有以下几个主要的函数用来将数据读入R中：</p>

<ul>
<li><code>read.table</code>和<code>read.csv</code>用来读入表格数据，生成数据框</li>
<li><code>readLines</code>用来读入文本文件(text)，生成字符向量</li>
<li><code>source</code>读入R代码(inverse of dump)</li>
<li><code>dget</code>读入R代码(inverse of dput)</li>
<li><code>load</code>读入工作空间(workspaces)内容</li>
<li><code>unserialize</code>读入二进制的R对象</li>
</ul>


<!--more-->


<p>与读入数据类似，也有相应的函数用来将数据写到文件中。</p>

<ul>
<li>write.table</li>
<li>writeLines</li>
<li>dump</li>
<li>dput</li>
<li>save</li>
<li>serialize</li>
</ul>


<h4>read.table</h4>

<p><code>read.table</code>是最常用的读入数据的函数之一，它有几个重要的参数：</p>

<ul>
<li>file，文件名称</li>
<li>header，逻辑值，表征读入的数据是否有header line</li>
<li>sep，字符串的分割方式，如&#8221;,&ldquo;、tab、&rdquo; &ldquo;&hellip;&hellip;</li>
<li>colClasses，一个字符串向量用于指示每一列数据的数据类型</li>
<li>nrows，数据的行数</li>
<li>comment.char，一个字符串用于指示注释标示，比如常用的有英镑符号或者井号(#)</li>
<li>skip，从前面跳过多少行开始读入</li>
<li>stringsAsFactors，是否从读入数据中自动识别为因子</li>
</ul>


<p>用<code>read.table</code>读入小的文件时无需指定任何参数（如果设定参数，R将运行得更快、更高效）。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>data <span class="o">&lt;-</span> read.table<span class="p">(</span><span class="s">&quot;foo.txt&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>R会  <br/>
• 自动跳过以“#”开头的行 <br/>
• 自动识别出有多少行，需要用多少内存<br/>
• 自动识别每列元素的数据类型 <br/>
<code>read.csv</code>默认识别的分隔符是逗号，而<code>read.rable</code>默认的分隔符是空格。
用<code>read.table</code>读入大文件时，进行一下操作将有助于防止R跑死：<br/>
• 阅读<code>read.table</code>的帮助文件将会发现很多重要的提示<br/>
• 粗略估计将读入的数据会占用多少内存<br/>
• 如果读入文件中没有注释行，设置<code>comment.char = ""</code>将加快读入速度<br/>
• 指定更多详细的参数将对读入速度有大大的提高</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'>initial <span class="o">&lt;-</span> read.table<span class="p">(</span><span class="s">&quot;datatable.txt&quot;</span><span class="p">,</span> nrows <span class="o">=</span> <span class="m">100</span><span class="p">)</span>
</span><span class='line'>classes <span class="o">&lt;-</span> sapply<span class="p">(</span>initial<span class="p">,</span> class<span class="p">)</span>
</span><span class='line'>tabAll <span class="o">&lt;-</span> read.table<span class="p">(</span><span class="s">&quot;datatable.txt&quot;</span><span class="p">,</span> colClasses <span class="o">=</span> classes<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>计算内存需求</h4>

<p>假设一个文件有1,500,000行，120列，所有的数据都是数字，粗略计算需要占用的存储内存有：<br/>
1,500,000 × 120 × 8 bytes/numeric = 1440000000 bytes = 1.34G <br/>
可以通过<code>version</code>命令查看当前运行机的系统信息，进而判断是否读入该文件。</p>

<h4>按行读取文档（Reading Lines of a Text File）</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span>con<span class="o">&lt;-</span>gzfile<span class="p">(</span><span class="s">&quot;words.gz&quot;</span><span class="p">)</span>    <span class="c1">#用函数`gzfile`打开压缩文件</span>
</span><span class='line'><span class="o">&gt;</span>x<span class="o">&lt;-</span>readLines<span class="p">(</span>con<span class="p">,</span><span class="m">10</span><span class="p">)</span>    <span class="c1">#只读取该文件前十行</span>
</span><span class='line'><span class="o">&gt;</span>x
</span><span class='line'> <span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;1080&quot;</span> <span class="s">&quot;10-point&quot;</span> <span class="s">&quot;10th&quot;</span> <span class="s">&quot;11-point&quot;</span>
</span><span class='line'> <span class="p">[</span><span class="m">5</span><span class="p">]</span> <span class="s">&quot;12-point&quot;</span> <span class="s">&quot;16-point&quot;</span> <span class="s">&quot;18-point&quot;</span> <span class="s">&quot;1st&quot;</span>
</span><span class='line'> <span class="p">[</span><span class="m">9</span><span class="p">]</span> <span class="s">&quot;2&quot;</span> <span class="s">&quot;20-point&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>读取网络文件</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span>con <span class="o">&lt;-</span> url<span class="p">(</span><span class="s">&quot;http://www.jhsph.edu&quot;</span><span class="p">,</span> <span class="s">&quot;r&quot;</span><span class="p">)</span>    <span class="c1">#用函数`url`读取网络文件</span>
</span><span class='line'><span class="o">&gt;</span>x <span class="o">&lt;-</span> readLines<span class="p">(</span>con<span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> head<span class="p">(</span>x<span class="p">)</span>    <span class="c1">#默认显示前6行</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;&lt;!DOCTYPE HTML PUBLIC \&quot;-//W3C//DTD HTML 4.0 Transitional//EN\&quot;&gt;&quot;</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">]</span> <span class="s">&quot;&quot;</span>
</span><span class='line'><span class="p">[</span><span class="m">3</span><span class="p">]</span> <span class="s">&quot;&lt;html&gt;&quot;</span>
</span><span class='line'><span class="p">[</span><span class="m">4</span><span class="p">]</span> <span class="s">&quot;&lt;head&gt;&quot;</span>
</span><span class='line'><span class="p">[</span><span class="m">5</span><span class="p">]</span> <span class="s">&quot;</span><span class="err">\t&lt;meta http-equiv=\</span><span class="s">&quot;</span>Content<span class="o">-</span>Type\<span class="s">&quot;</span><span class="err"> content=\</span><span class="s">&quot;</span>text<span class="o">/</span>html<span class="p">;</span>charset<span class="o">=</span>utf<span class="m">-8</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[矢量化操作]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/01/21/vectorized-operations/"/>
    <updated>2014-01-21T02:08:34+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/01/21/vectorized-operations</id>
    <content type="html"><![CDATA[<h5><em>Computing for Data Analysis, week1-Vectorized Operations</em></h5>

<h3>矢量化操作(Vectorized Operations)</h3>

<p>在R中的很多操作都是矢量化的，使得R的代码更加高效、简洁、易懂。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> <span class="m">1</span><span class="o">:</span><span class="m">4</span><span class="p">;</span> y <span class="o">&lt;-</span> <span class="m">6</span><span class="o">:</span><span class="m">9</span>    <span class="c1">#新建两个向量x和y</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="o">+</span>y    <span class="c1">#对两个长度相同或者长度成倍数关系的向量执行加法运算</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span>  <span class="m">7</span>  <span class="m">9</span> <span class="m">11</span> <span class="m">13</span>
</span><span class='line'><span class="o">&gt;</span> x <span class="o">*</span> y   <span class="c1">#对两个长度相同或者长度成倍数关系的向量执行乘法运算</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span>  <span class="m">6</span> <span class="m">14</span> <span class="m">24</span> <span class="m">36</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>矢量化矩阵运算</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> matrix<span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">4</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">2</span><span class="p">);</span> y <span class="o">&lt;-</span> matrix<span class="p">(</span>rep<span class="p">(</span><span class="m">10</span><span class="p">,</span> <span class="m">4</span><span class="p">),</span> <span class="m">2</span><span class="p">,</span> <span class="m">2</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="p">[,</span><span class="m">2</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>    <span class="m">1</span>    <span class="m">3</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span>    <span class="m">2</span>    <span class="m">4</span>
</span><span class='line'><span class="o">&gt;</span> y
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="p">[,</span><span class="m">2</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>   <span class="m">10</span>   <span class="m">10</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span>   <span class="m">10</span>   <span class="m">10</span>
</span><span class='line'><span class="o">&gt;</span> x <span class="o">*</span> y    <span class="c1">#矩阵点乘</span>
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="p">[,</span><span class="m">2</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>   <span class="m">10</span>   <span class="m">30</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span>   <span class="m">20</span>   <span class="m">40</span>
</span><span class='line'><span class="o">&gt;</span> x <span class="o">%*%</span> y    <span class="c1">#矩阵乘法</span>
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="p">[,</span><span class="m">2</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>   <span class="m">40</span>   <span class="m">40</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span>   <span class="m">60</span>   <span class="m">60</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="o">/</span>y    <span class="c1">#两个矩阵对应元素除法</span>
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="p">[,</span><span class="m">2</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>  <span class="m">0.1</span>  <span class="m">0.3</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span>  <span class="m">0.2</span>  <span class="m">0.4</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R的数据类型-2]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/01/19/r-datatype-2/"/>
    <updated>2014-01-19T03:09:28+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/01/19/r-datatype-2</id>
    <content type="html"><![CDATA[<h5><em>Computing for Data Analysis, week1-Subsetting</em></h5>

<h3>子集(Subsetting)</h3>

<p>提取R中元素子集的方法：</p>

<ul>
<li>选择一个向量中元素的子集（一个或多个元素）可以通过在其名称后追加一个方括号<code>[</code>中的索引向量来完成；</li>
<li><code>[[</code>用来提取列表或者数据框中的元素，这种方式只可以提取一个元素；</li>
<li><code>$</code>用来根据名称提取列表或数据框中的元素。</li>
</ul>


<!--more-->


<p><p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;&ndash;</span> c<span class="p">(</span><span class="s">&quot;a&quot;</span><span class="p">,</span> <span class="s">&quot;b&quot;</span><span class="p">,</span> <span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="s">&quot;d&quot;</span><span class="p">,</span> <span class="s">&quot;a&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[</span><span class="m">1</span><span class="p">]</span>    <span class="c1">#提取向量x中的第一个元素</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;a&quot;</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">4</span><span class="p">]</span>    <span class="c1">#提取向量x中第一至第四个元素</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;a&quot;</span> <span class="s">&quot;b&quot;</span> <span class="s">&quot;c&quot;</span> <span class="s">&quot;c&quot;</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[</span>x <span class="o">&gt;</span> <span class="s">&quot;b&quot;</span><span class="p">]</span>    <span class="c1">#提取向量x中大于b的元素</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;c&quot;</span> <span class="s">&quot;c&quot;</span> <span class="s">&quot;d&quot;</span>
</span><span class='line'><span class="o">&gt;</span> u <span class="o">&lt;&ndash;</span> x <span class="o">&gt;</span> <span class="s">&quot;a&quot;</span>    <span class="c1">#创建一个逻辑向量u，逻辑值是x中的每个元素是否大于a</span>
</span><span class='line'><span class="o">&gt;</span> u
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="kc">FALSE</span>  <span class="kc">TRUE</span>  <span class="kc">TRUE</span>  <span class="kc">TRUE</span>  <span class="kc">TRUE</span> <span class="kc">FALSE</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[</span>u<span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;b&quot;</span> <span class="s">&quot;c&quot;</span> <span class="s">&quot;c&quot;</span> <span class="s">&quot;d&quot;</span>
</span></code></pre></td></tr></table></div></figure></p>

<h4>构造矩阵子集(Subsetting a Matrix)</h4>

<p>矩阵子集可通过元素脚标获取，形如<code>(i,j)</code>，i表示行数，j表示列数。<br/>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;&ndash;</span> matrix<span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">6</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">3</span><span class="p">)</span>    <span class="c1">#构建矩阵x，元素内容为1~6数字，矩阵有2行3列</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="p">[,</span><span class="m">2</span><span class="p">]</span> <span class="p">[,</span><span class="m">3</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>    <span class="m">1</span>    <span class="m">3</span>    <span class="m">5</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span>    <span class="m">2</span>    <span class="m">4</span>    <span class="m">6</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[</span><span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">]</span>    <span class="c1">#提取矩阵x中第1行第2列的元素</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">3</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[</span><span class="m">2</span><span class="p">,</span> <span class="m">1</span><span class="p">]</span>    <span class="c1">#提取矩阵x中第2行第1列的元素</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">2</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[</span><span class="m">1</span><span class="p">,</span> <span class="p">]</span>    <span class="c1">#提取矩阵x中第1行的所有元素</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">3</span> <span class="m">5</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[,</span> <span class="m">2</span><span class="p">]</span>    <span class="c1">#提取矩阵x中第2列的所有元素</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">3</span> <span class="m">4</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[,</span> <span class="m">2</span><span class="p">,</span>drop<span class="o">=</span><span class="kc">FALSE</span><span class="p">]</span>    <span class="c1">#drop参数默认是TRUE，当设置其为FALSE时，返回的元素将以矩阵形式表示，而不是向量形式</span>
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>    <span class="m">3</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span>    <span class="m">4</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">2</span><span class="p">,</span> <span class="m">2</span><span class="o">:</span><span class="m">3</span><span class="p">]</span>
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="p">[,</span><span class="m">2</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>    <span class="m">3</span>    <span class="m">5</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span>    <span class="m">4</span>    <span class="m">6</span>
</span></code></pre></td></tr></table></div></figure></p>

<h4>构造列表子集(Subsetting Lists)</h4>

<p><figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;&ndash;</span> list<span class="p">(</span>foo <span class="o">=</span> <span class="m">1</span><span class="o">:</span><span class="m">4</span><span class="p">,</span> bar <span class="o">=</span> <span class="m">0.6</span><span class="p">,</span> baz<span class="o">=</span><span class="s">&quot;hello&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'><span class="o">$</span>foo
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span> <span class="m">4</span>
</span><span class='line'>
</span><span class='line'><span class="o">$</span>bar
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">0.6</span>
</span><span class='line'>
</span><span class='line'><span class="o">$</span>baz
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;hello&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[</span><span class="m">1</span><span class="p">]</span>    <span class="c1">#单个中括号`[`获取列表元素将返回列表形式</span>
</span><span class='line'><span class="o">$</span>foo
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span> <span class="m">4</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[[</span><span class="m">1</span><span class="p">]]</span>    <span class="c1">#双中括号`[[`将只返回元素内容</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span> <span class="m">4</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="o">$</span>bar
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">0.6</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[[</span><span class="s">&quot;bar&quot;</span><span class="p">]]</span>    <span class="c1">#同x$bar效果相同</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">0.6</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[</span><span class="s">&quot;bar&quot;</span><span class="p">]</span>
</span><span class='line'><span class="o">$</span>bar
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">0.6</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[</span>c<span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">3</span><span class="p">)]</span>    <span class="c1">#如果想获取列表中的多个元素，只能用单中括号`[`</span>
</span><span class='line'><span class="o">$</span>foo
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span> <span class="m">4</span>
</span><span class='line'>
</span><span class='line'><span class="o">$</span>baz
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;hello&quot;</span>
</span></code></pre></td></tr></table></div></figure></p>

<blockquote><p>请注意区分Lst[[1]]和Lst[1]，&#8217;[[&hellip;]]&lsquo;是选择单个元素时使用的操作符，而&rsquo;[&hellip;]&lsquo;是一个一般的下标操作符。因此，前者代表列表Lst中的第一个对象，而且如果列表已命名，对象的名称并不包含在所指定的对象里；后者是列表Lst的子列表，仅包含列表的第一项。而如果列表已命名，其名称也包含到所指定的对象里。</p></blockquote>

<p>双中括号<code>[[</code>和美元符号<code>$</code>用于引用：<br/>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;&ndash;</span> list<span class="p">(</span>foo <span class="o">=</span> <span class="m">1</span><span class="o">:</span><span class="m">4</span><span class="p">,</span> bar <span class="o">=</span> <span class="m">0.6</span><span class="p">,</span> baz <span class="o">=</span> <span class="s">&quot;hello&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> name <span class="o">&lt;&ndash;</span> <span class="s">&quot;foo&quot;</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[[</span>name<span class="p">]]</span>    <span class="c1">#输出x[[&quot;foo&quot;]]的结果</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span> <span class="m">4</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="o">$</span>name    <span class="c1">#元素name不存在，在这里会把name当做x中的元素判断</span>
</span><span class='line'><span class="kc">NULL</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="o">$</span>foo    <span class="c1">#元素foo存在</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span> <span class="m">4</span>
</span></code></pre></td></tr></table></div></figure>
双中括号其他用法：<br/>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;&ndash;</span> list<span class="p">(</span>a <span class="o">=</span> list<span class="p">(</span><span class="m">10</span><span class="p">,</span> <span class="m">12</span><span class="p">,</span> <span class="m">14</span><span class="p">),</span> b <span class="o">=</span> c<span class="p">(</span><span class="m">3.14</span><span class="p">,</span> <span class="m">2.81</span><span class="p">))</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[[</span>c<span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">3</span><span class="p">)]]</span>    <span class="c1">#提取列表x中第1个对象中的第3个元素</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">14</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[[</span><span class="m">1</span><span class="p">]][[</span><span class="m">3</span><span class="p">]]</span>    <span class="c1">#效果同上</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">14</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[[</span>c<span class="p">(</span><span class="m">2</span><span class="p">,</span> <span class="m">1</span><span class="p">)]]</span>    <span class="c1">#提取列表x中第2个对象中的第1个元素</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">3.14</span>
</span></code></pre></td></tr></table></div></figure></p>

<h4>部分匹配(Partial Matching)</h4>

<p>在<code>[[</code>和<code>$</code>提取子集时允许部分匹配。<br/>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;&ndash;</span> list<span class="p">(</span>aardvark <span class="o">=</span> <span class="m">1</span><span class="o">:</span><span class="m">5</span><span class="p">,</span>abcc<span class="o">=</span><span class="m">6</span><span class="o">:</span><span class="m">8</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="o">$</span>a
</span><span class='line'><span class="kc">NULL</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="o">$</span>ab    <span class="c1">#因为列表x的对象中ab开头的只有“abcc”</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">6</span> <span class="m">7</span> <span class="m">8</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="o">$</span>aa
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span> <span class="m">4</span> <span class="m">5</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[[</span><span class="s">&quot;ab&quot;</span><span class="p">]]</span>
</span><span class='line'><span class="kc">NULL</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[[</span><span class="s">&quot;ab&quot;</span><span class="p">,</span>exact<span class="o">=</span><span class="kc">FALSE</span><span class="p">]]</span>    <span class="c1">#`[[`模式中默认extact参数是TRUE，不支持部分匹配</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">6</span> <span class="m">7</span> <span class="m">8</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3>移除空值(Removing NA Values)</h3>

<p><figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;&ndash;</span> c<span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="kc">NA</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="kc">NA</span><span class="p">,</span> <span class="m">5</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> bad<span class="o">&lt;&ndash;</span> is.na<span class="p">(</span>x<span class="p">)</span>    <span class="c1">#构建逻辑向量bad，其中的元素是x中是否是空值</span>
</span><span class='line'><span class="o">&gt;</span> bad
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="kc">FALSE</span> <span class="kc">FALSE</span>  <span class="kc">TRUE</span> <span class="kc">FALSE</span>  <span class="kc">TRUE</span> <span class="kc">FALSE</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[</span><span class="o">!</span>bad<span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span> <span class="m">4</span> <span class="m">5</span>
</span></code></pre></td></tr></table></div></figure>
用函数<code>complete.cases</code>对多个对象同时移除空值<br/>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;&ndash;</span> c<span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="kc">NA</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="kc">NA</span><span class="p">,</span> <span class="m">5</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> y <span class="o">&lt;&ndash;</span> c<span class="p">(</span><span class="s">&quot;a&quot;</span><span class="p">,</span> <span class="kc">NA</span><span class="p">,</span><span class="s">&quot;b&quot;</span><span class="p">,</span> <span class="s">&quot;d&quot;</span><span class="p">,</span> <span class="kc">NA</span><span class="p">,</span> <span class="s">&quot;f&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> good <span class="o">&lt;&ndash;</span> complete.cases<span class="p">(</span>x<span class="p">,</span> y<span class="p">)</span>    <span class="c1">#判断x和y每个位置上都不是空值则为TRUE，否则为FALSE</span>
</span><span class='line'><span class="o">&gt;</span> good
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span>  <span class="kc">TRUE</span> <span class="kc">FALSE</span> <span class="kc">FALSE</span>  <span class="kc">TRUE</span> <span class="kc">FALSE</span>  <span class="kc">TRUE</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="p">[</span>good<span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">4</span> <span class="m">5</span>
</span><span class='line'><span class="o">&gt;</span> y<span class="p">[</span>good<span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;a&quot;</span> <span class="s">&quot;d&quot;</span> <span class="s">&quot;f&quot;</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2>参考资料</h2>

<p>[1] R Development Core Team. R语言简介-R语言笔记:数据分析与绘图的编程环境[M].1.7版. 2006.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R的数据类型-1]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/01/17/r-datatype/"/>
    <updated>2014-01-17T00:35:54+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/01/17/r-datatype</id>
    <content type="html"><![CDATA[<h5><em>Computing for Data Analysis, week1-Data Types</em></h5>

<h3>元素(objects)</h3>

<p>R有五种数据类型：</p>

<ul>
<li>character</li>
<li>numeric(real numbers)</li>
<li>inetger</li>
<li>complex</li>
<li>logical(True/False)</li>
</ul>


<!--more-->


<p>需要注意的是，向量(vector)中的元素类型必须相同，而列表(list)中的元素类型可以不同。</p>

<h4>数字(numbers)</h4>

<p>数字在R中默认是双精度数，如果要强调是整数，要在整数数字后面加上“L”来标示。例如“1L”标示整数1。<br/>
特殊的数字：</p>

<ul>
<li>Inf表示无限大的数字，比如1/0的结果是Inf，1/Inf的结果是0</li>
<li>NaN表示没有定义的值，比如“0/0”，或者缺失值</li>
</ul>


<h4>属性(Attriubutes)</h4>

<ul>
<li>名称names, dimnames</li>
<li>维度(dimensions)，比如matrices，arrays</li>
<li>类(class)</li>
<li>长度(length)，向量中元素的个数即为向量长度</li>
</ul>


<h3>赋值(Enter input)</h3>

<p>用赋值运算符“&lt;-”给元素赋值，比如</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x<span class="o">&lt;-</span><span class="m">1</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span>
</span><span class='line'><span class="o">&gt;</span> x<span class="o">&lt;</span><span class="m">1</span><span class="o">:</span><span class="m">20</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span> <span class="m">4</span> <span class="m">5</span> <span class="m">6</span> <span class="m">7</span> <span class="m">8</span> <span class="m">9</span> <span class="m">10</span> <span class="m">11</span> <span class="m">12</span> <span class="m">13</span> <span class="m">14</span> <span class="m">15</span>
</span><span class='line'><span class="p">[</span><span class="m">16</span><span class="p">]</span> <span class="m">16</span> <span class="m">17</span> <span class="m">18</span> <span class="m">19</span> <span class="m">20</span>
</span></code></pre></td></tr></table></div></figure>


<p>其他赋值方式：函数<code>c( )</code>用来构建向量</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> c<span class="p">(</span><span class="m">0.5</span><span class="p">,</span><span class="m">0.6</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> c<span class="p">(</span><span class="kc">TRUE</span><span class="p">,</span> <span class="kc">FALSE</span><span class="p">)</span> <span class="c1">## logical</span>
</span><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> c<span class="p">(</span><span class="k-Variable">T</span><span class="p">,</span> <span class="k-Variable">F</span><span class="p">)</span> <span class="c1">## logical</span>
</span><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> c<span class="p">(</span><span class="s">&quot;a&quot;</span><span class="p">,</span> <span class="s">&quot;b&quot;</span><span class="p">,</span> <span class="s">&quot;c&quot;</span><span class="p">)</span> <span class="c1">## character</span>
</span><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> <span class="m">9</span><span class="o">:</span><span class="m">29</span> <span class="c1">## integer</span>
</span><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> c<span class="p">(</span><span class="m">1+0i</span><span class="p">,</span> <span class="m">2+4i</span><span class="p">)</span> <span class="c1">## complex</span>
</span></code></pre></td></tr></table></div></figure>


<p>函数<code>vector( )</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> vector<span class="p">(</span><span class="s">&quot;numeric&quot;</span><span class="p">,</span> length <span class="o">=</span> <span class="m">10</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">0</span> <span class="m">0</span> <span class="m">0</span> <span class="m">0</span> <span class="m">0</span> <span class="m">0</span> <span class="m">0</span> <span class="m">0</span> <span class="m">0</span> <span class="m">0</span>
</span></code></pre></td></tr></table></div></figure>


<h3>强制转换(Explicit Coercion)</h3>

<p>函数<code>as.*</code>用来强制转换数据类型，比如<code>as.numeric(x)</code>将向量x中的元素强制转换成数字格式。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> <span class="m">0</span><span class="o">:</span><span class="m">6</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">0</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span> <span class="m">4</span> <span class="m">5</span> <span class="m">6</span>
</span><span class='line'><span class="o">&gt;</span> class<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;integer&quot;</span>
</span><span class='line'><span class="o">&gt;</span> as.logical<span class="p">(</span>x<span class="p">)</span>    <span class="c1">#强制转换成逻辑值</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="kc">FALSE</span>  <span class="kc">TRUE</span>  <span class="kc">TRUE</span>  <span class="kc">TRUE</span>  <span class="kc">TRUE</span>  <span class="kc">TRUE</span>  <span class="kc">TRUE</span>
</span><span class='line'><span class="o">&gt;</span> as.character<span class="p">(</span>x<span class="p">)</span>    <span class="c1">#强制转换成字符</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;0&quot;</span> <span class="s">&quot;1&quot;</span> <span class="s">&quot;2&quot;</span> <span class="s">&quot;3&quot;</span> <span class="s">&quot;4&quot;</span> <span class="s">&quot;5&quot;</span> <span class="s">&quot;6&quot;</span>
</span><span class='line'><span class="o">&gt;</span> as.complex<span class="p">(</span>x<span class="p">)</span>    <span class="c1">#强制转换成复数形式</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">0+0i</span> <span class="m">1+0i</span> <span class="m">2+0i</span> <span class="m">3+0i</span> <span class="m">4+0i</span> <span class="m">5+0i</span> <span class="m">6+0i</span>
</span></code></pre></td></tr></table></div></figure>


<p>无法转换的元素值会表示成NA</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> c<span class="p">(</span><span class="s">&quot;a&quot;</span><span class="p">,</span> <span class="s">&quot;b&quot;</span><span class="p">,</span> <span class="s">&quot;c&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> as.numeric<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="kc">NA</span> <span class="kc">NA</span> <span class="kc">NA</span>
</span><span class='line'>Warning message<span class="o">:</span>
</span><span class='line'>NAs introduced by coercion
</span><span class='line'><span class="o">&gt;</span> as.logical<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="kc">NA</span> <span class="kc">NA</span> <span class="kc">NA</span>
</span></code></pre></td></tr></table></div></figure>


<h3>矩阵(Matrices)</h3>

<p>矩阵是维度为2的向量，这两个维度分别是(nrow,ncol)。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> m <span class="o">&lt;-</span> matrix<span class="p">(</span>nrow <span class="o">=</span> <span class="m">2</span><span class="p">,</span> ncol <span class="o">=</span> <span class="m">3</span><span class="p">)</span>    <span class="c1">#定义m是一个2×3的矩阵</span>
</span><span class='line'><span class="o">&gt;</span> m
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="p">[,</span><span class="m">2</span><span class="p">]</span> <span class="p">[,</span><span class="m">3</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>   <span class="kc">NA</span>   <span class="kc">NA</span>   <span class="kc">NA</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span>   <span class="kc">NA</span>   <span class="kc">NA</span>   <span class="kc">NA</span>
</span><span class='line'><span class="o">&gt;</span> attributes<span class="p">(</span>m<span class="p">)</span>    <span class="c1">#查看m的属性</span>
</span><span class='line'><span class="o">$</span>dim
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">2</span> <span class="m">3</span>
</span></code></pre></td></tr></table></div></figure>


<p>还可以通过给一个已有向量增加维度属性的方式生成矩阵。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> m <span class="o">&lt;-</span> <span class="m">1</span><span class="o">:</span><span class="m">10</span>    <span class="c1">#定义m是一个向量，包含10个元素</span>
</span><span class='line'><span class="o">&gt;</span> m
</span><span class='line'> <span class="p">[</span><span class="m">1</span><span class="p">]</span>  <span class="m">1</span>  <span class="m">2</span>  <span class="m">3</span>  <span class="m">4</span>  <span class="m">5</span>  <span class="m">6</span>  <span class="m">7</span>  <span class="m">8</span>  <span class="m">9</span> <span class="m">10</span>
</span><span class='line'><span class="o">&gt;</span> dim<span class="p">(</span>m<span class="p">)</span> <span class="o">&lt;-</span> c<span class="p">(</span><span class="m">2</span><span class="p">,</span> <span class="m">5</span><span class="p">)</span>    <span class="c1">#给向量m增加维度2×5，使m变成一个矩阵</span>
</span><span class='line'><span class="o">&gt;</span> m
</span><span class='line'>     <span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="p">[,</span><span class="m">2</span><span class="p">]</span> <span class="p">[,</span><span class="m">3</span><span class="p">]</span> <span class="p">[,</span><span class="m">4</span><span class="p">]</span> <span class="p">[,</span><span class="m">5</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span>    <span class="m">1</span>    <span class="m">3</span>    <span class="m">5</span>    <span class="m">7</span>    <span class="m">9</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span>    <span class="m">2</span>    <span class="m">4</span>    <span class="m">6</span>    <span class="m">8</span>   <span class="m">10</span>
</span></code></pre></td></tr></table></div></figure>


<p>函数<code>cbind( )</code>和<code>rbind( )</code>可以将多个向量（长度要相同）合并成一个矩阵。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x<span class="o">&lt;-</span><span class="m">1</span><span class="o">:</span><span class="m">3</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">2</span> <span class="m">3</span>
</span><span class='line'><span class="o">&gt;</span> y<span class="o">&lt;-</span><span class="m">4</span><span class="o">:</span><span class="m">6</span>
</span><span class='line'><span class="o">&gt;</span> y
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">4</span> <span class="m">5</span> <span class="m">6</span>
</span><span class='line'><span class="o">&gt;</span> z<span class="o">&lt;-</span><span class="m">8</span><span class="o">:</span><span class="m">10</span>
</span><span class='line'><span class="o">&gt;</span> z
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span>  <span class="m">8</span>  <span class="m">9</span> <span class="m">10</span>
</span><span class='line'><span class="o">&gt;</span> cbind<span class="p">(</span>x<span class="p">,</span>y<span class="p">,</span>z<span class="p">)</span>
</span><span class='line'>     x y  z
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">,]</span> <span class="m">1</span> <span class="m">4</span>  <span class="m">8</span>
</span><span class='line'><span class="p">[</span><span class="m">2</span><span class="p">,]</span> <span class="m">2</span> <span class="m">5</span>  <span class="m">9</span>
</span><span class='line'><span class="p">[</span><span class="m">3</span><span class="p">,]</span> <span class="m">3</span> <span class="m">6</span> <span class="m">10</span>
</span><span class='line'><span class="o">&gt;</span> rbind<span class="p">(</span>x<span class="p">,</span>y<span class="p">)</span>
</span><span class='line'>  <span class="p">[,</span><span class="m">1</span><span class="p">]</span> <span class="p">[,</span><span class="m">2</span><span class="p">]</span> <span class="p">[,</span><span class="m">3</span><span class="p">]</span>
</span><span class='line'>x    <span class="m">1</span>    <span class="m">2</span>    <span class="m">3</span>
</span><span class='line'>y    <span class="m">4</span>    <span class="m">5</span>    <span class="m">6</span>
</span></code></pre></td></tr></table></div></figure>


<h3>列表(List)</h3>

<p>列表的特征在于其中的元素可以是不同的类型，使用函数<code>list( )</code>生成列表。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> list<span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="s">&quot;a&quot;</span><span class="p">,</span> <span class="kc">TRUE</span><span class="p">,</span> <span class="m">1</span> <span class="o">+</span> <span class="m">4i</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'><span class="p">[[</span><span class="m">1</span><span class="p">]]</span>    <span class="c1">#这里使用双中括号表示的</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span>
</span><span class='line'>
</span><span class='line'><span class="p">[[</span><span class="m">2</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;a&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="p">[[</span><span class="m">3</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="kc">TRUE</span>
</span><span class='line'>
</span><span class='line'><span class="p">[[</span><span class="m">4</span><span class="p">]]</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1+4i</span>
</span></code></pre></td></tr></table></div></figure>


<h3>因子(Factor)</h3>

<p>因子是一个对同长的其他向量元素 进行分类（分组）的向量对象。因子可由函数<code>factor( )</code>生成，其中的元素是字符类型。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> factor<span class="p">(</span>c<span class="p">(</span><span class="s">&quot;yes&quot;</span><span class="p">,</span> <span class="s">&quot;yes&quot;</span><span class="p">,</span> <span class="s">&quot;no&quot;</span><span class="p">,</span> <span class="s">&quot;yes&quot;</span><span class="p">,</span> <span class="s">&quot;no&quot;</span><span class="p">))</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> yes yes no  yes no
</span><span class='line'>Levels<span class="o">:</span> no yes
</span><span class='line'><span class="o">&gt;</span> table<span class="p">(</span>x<span class="p">)</span>    <span class="c1">#统计每种因子的个数</span>
</span><span class='line'>x
</span><span class='line'> no yes
</span><span class='line'>  <span class="m">2</span>   <span class="m">3</span>
</span><span class='line'><span class="o">&gt;</span> unclass<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">2</span> <span class="m">2</span> <span class="m">1</span> <span class="m">2</span> <span class="m">1</span>
</span><span class='line'>attr<span class="p">(,</span><span class="s">&quot;levels&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;no&quot;</span>  <span class="s">&quot;yes&quot;</span>
</span><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> factor<span class="p">(</span>c<span class="p">(</span><span class="s">&quot;yes&quot;</span><span class="p">,</span> <span class="s">&quot;yes&quot;</span><span class="p">,</span> <span class="s">&quot;no&quot;</span><span class="p">,</span> <span class="s">&quot;yes&quot;</span><span class="p">,</span> <span class="s">&quot;no&quot;</span><span class="p">),</span>levels <span class="o">=</span> c<span class="p">(</span><span class="s">&quot;yes&quot;</span><span class="p">,</span> <span class="s">&quot;no&quot;</span><span class="p">))</span>    <span class="c1">#通过“levels=c(&quot;yes&quot;, &quot;no&quot;)”设定yes是第一个level，no是第二个level</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> yes yes no  yes no
</span><span class='line'>Levels<span class="o">:</span> yes no
</span><span class='line'><span class="o">&gt;</span> unclass<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span> <span class="m">1</span> <span class="m">2</span> <span class="m">1</span> <span class="m">2</span>    <span class="c1">#level的顺序改变导致unclass的数字变化</span>
</span><span class='line'>attr<span class="p">(,</span><span class="s">&quot;levels&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="s">&quot;yes&quot;</span>   <span class="s">&quot;no&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>缺失值(Missing value)</h3>

<p>缺失值表示为NA，NaN用于表示没有定义的数学运算。NA值也有数据类型。<br/>
函数<code>is.na( )</code>用于测试元素值是否是NA<br/>
函数<code>is.nan( )</code>用于测试元素是否为NaN</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;-</span> c<span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="kc">NaN</span><span class="p">,</span> <span class="kc">NA</span><span class="p">,</span> <span class="m">4</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> is.na<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="kc">FALSE</span> <span class="kc">FALSE</span>  <span class="kc">TRUE</span>  <span class="kc">TRUE</span> <span class="kc">FALSE</span>
</span><span class='line'><span class="o">&gt;</span> is.nan<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="kc">FALSE</span> <span class="kc">FALSE</span>  <span class="kc">TRUE</span> <span class="kc">FALSE</span> <span class="kc">FALSE</span>
</span></code></pre></td></tr></table></div></figure>


<h3>数据框(Data Frames)</h3>

<p>数据框是一种与矩阵相似的结构，用来存储列表数据，其中的列可以是不同的数据类型。</p>

<ul>
<li>数据框用来表示一种特殊类型的列表，列表的每个元素具有相同的长度</li>
<li>列表的每个元素可以被认为是一个列(column)，列表中每个列表的元素长度是列的个数</li>
<li>与矩阵不同，数据框可以存储不同数据类型的元素</li>
<li>数据框有一个特殊属性称为<code>row.names</code></li>
<li>通常用函数<code>read.table( )</code>或<code>read.csv( )</code>来构建数据框</li>
<li>可以通过函数<code>data.matrix</code>将数据框转换为矩阵</li>
</ul>


<p><p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;&ndash;</span> data.frame<span class="p">(</span>foo <span class="o">=</span> <span class="m">1</span><span class="o">:</span><span class="m">4</span><span class="p">,</span> bar <span class="o">=</span> c<span class="p">(</span><span class="k-Variable">T</span><span class="p">,</span> <span class="k-Variable">T</span><span class="p">,</span> <span class="k-Variable">F</span><span class="p">,</span> <span class="k-Variable">F</span><span class="p">))</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'>  foo   bar
</span><span class='line'><span class="m">1</span>   <span class="m">1</span>  <span class="kc">TRUE</span>
</span><span class='line'><span class="m">2</span>   <span class="m">2</span>  <span class="kc">TRUE</span>
</span><span class='line'><span class="m">3</span>   <span class="m">3</span> <span class="kc">FALSE</span>
</span><span class='line'><span class="m">4</span>   <span class="m">4</span> <span class="kc">FALSE</span>
</span><span class='line'><span class="o">&gt;</span> nrow<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">4</span>
</span><span class='line'><span class="o">&gt;</span> ncol<span class="p">(</span>x<span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">2</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3>名称(Names)</h3>

<p>R中的元素可以赋予名称。 <br/>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span>  x <span class="o">&lt;&ndash;</span> <span class="m">1</span><span class="o">:</span><span class="m">4</span>
</span><span class='line'><span class="o">&gt;</span> names<span class="p">(</span>x<span class="p">)</span> <span class="o">&lt;&ndash;</span> c<span class="p">(</span><span class="s">&quot;foo&quot;</span><span class="p">,</span> <span class="s">&quot;bar&quot;</span><span class="p">,</span> <span class="s">&quot;norf&quot;</span><span class="p">)</span>   <span class="c1">#以此给向量x中的每个元素起名</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'> foo  bar norf <span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="m">1</span>    <span class="m">2</span>    <span class="m">3</span>    <span class="m">4</span>
</span></code></pre></td></tr></table></div></figure>
列表起名称：
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> x <span class="o">&lt;&ndash;</span> list<span class="p">(</span>a <span class="o">=</span> <span class="m">1</span><span class="p">,</span> m <span class="o">=</span> <span class="m">2</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> x
</span><span class='line'><span class="o">$</span>a
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">1</span>
</span><span class='line'>
</span><span class='line'><span class="o">$</span>m
</span><span class='line'><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="m">2</span>
</span></code></pre></td></tr></table></div></figure>
矩阵中的名称称为<code>dimnames</code>： <br/>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="o">&gt;</span> m <span class="o">&lt;&ndash;</span> matrix<span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">4</span><span class="p">,</span> nrow <span class="o">=</span> <span class="m">2</span><span class="p">,</span> ncol <span class="o">=</span> <span class="m">2</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> dimnames<span class="p">(</span>m<span class="p">)</span> <span class="o">&lt;&ndash;</span> list<span class="p">(</span>c<span class="p">(</span><span class="s">&quot;a&quot;</span><span class="p">,</span> <span class="s">&quot;b&quot;</span><span class="p">),</span> c<span class="p">(</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="s">&quot;d&quot;</span><span class="p">))</span>   <span class="c1">#第一组元素认为是每行的名称(row names)，第二组元素认为是列名称(column names) </span>
</span><span class='line'><span class="o">&gt;</span> m
</span><span class='line'>  c d
</span><span class='line'>a <span class="m">1</span> <span class="m">3</span>
</span><span class='line'>b <span class="m">2</span> <span class="m">4</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R简介]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/01/16/r-computing-for-data-analysis/"/>
    <updated>2014-01-16T19:00:26+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/01/16/r-computing-for-data-analysis</id>
    <content type="html"><![CDATA[<h5><em>Computing for Data Analysis, week1-What Makes R Different</em></h5>

<blockquote><p>R语言是一种自由软件编程语言与操作环境，主要用于统计分析、绘图、数据挖掘。R本来是由来自新西兰奥克兰大学的Ross Ihaka和Robert Gentleman开发（也因此称为R）。R是基于S语言的一个GNU计划项目，所以也可以当作S语言的一种实现。<sup>[1]</sup></p></blockquote>

<!--more-->


<p>
R语言如此重要以及其盛行的原因，可引用阿稳文章<sup>[2]</sup>中的一段来描述：</p>

<blockquote><p>R是一门用于统计计算和作图的语言，它不单是一门语言，更是一个数据计算与分析的环境。统计计算领域有三大工具：SAS、SPSS、S，R正是受S语言和Scheme语言影响发展而来。其最主要的特点是免费、开源、各种各样的模块十分齐全，在R的综合档案网络CRAN中，提供了大量的第三方功能包，其内容涵盖了从统计计算到机器学习，从金融分析到生物信息，从社会网络分析到自然语言处理，从各种数据库各种语言接口到高性能计算模型，可以说无所不包，无所不容，这也是为什么R正在获得越来越多各行各业的从业人员喜爱的一个重要原因。</p></blockquote>

<h3>特性</h3>

<p>相对于 SPSS 和 SAS 来说，R 具有以下优点<sup>[3]</sup>：</p>

<blockquote><ul>
<li>可以运行在包括 Windows、Macintosh、及 Linux 在内的各种操作系统上，在各平台上都是完全免费的。SPSS 和 SAS 只能在其中部分平台上运行，并且需要按年度购买许可证。</li>
<li>由于 R 的开源特性，它具有良好的开放社群的支持，三千多个软件包可以从 CRAN (The Comprehensive R Archive Network) 免费下载和使用。而 SPSS 和 SAS 这些付费软件的额外软件包/模块需要花费额外的费用。</li>
<li>R 语言更为强大。事实上，SPSS 和 SAS 的脚本语言都不是真正的编程语言，R 语言是真正的编程语言。</li>
<li>R 提供对矩阵运算的内在支持，而 SPSS 和 SAS 必须使用额外的方法操作矩阵。</li>
<li>R 更易扩展。R 语言中的自定义函数和系统本身的函数没有区别，而 SPSS 和 SAS 用户使用宏来实现类似的功能。不管是用户还是开发者都可以使用 R 语言本身来扩展 R 的功能，而 SPSS 和 SAS 的开发者必须使用 C、Python、或者专用的开发包。</li>
</ul>
</blockquote>

<hr />

<p>本系列关于R的博文来自COURSEA网络课程<a href="https://class.coursera.org/compdata-004">Computing for Data Analysis</a>的学习笔记。</p>

<h2>参考资料</h2>

<p>[1] R语言&mdash;Wikipedia, the free encyclopedia. <br/>
<a href="http://zh.wikipedia.org/wiki/R%E8%AF%AD%E8%A8%80">http://zh.wikipedia.org/wiki/R%E8%AF%AD%E8%A8%80</a>  <br/>
[2] 阿稳. R——不仅仅是一门语言[J]. 程序员, 2010 (008): 80-82.<br/>
[3] 慕容飞宇. (2012-11-03)R 的特点. 来源<br/>
<a href="http://jiaoyan.org/r/?page_id=1047">http://jiaoyan.org/r/?page_id=1047</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MDA&amp;MALBAC技术介绍]]></title>
    <link href="http://rachelwxm.github.io/blog/2014/01/13/mda-and-malbacji-zhu-jie-shao/"/>
    <updated>2014-01-13T12:46:38+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2014/01/13/mda-and-malbacji-zhu-jie-shao</id>
    <content type="html"><![CDATA[<h2>MDA</h2>

<p>多重链置换扩增技术（Multiple displacement amplification, MDA）是一种不基于PCR循环的DNA扩增技术，这种扩增技术可以快速、大量扩增很少的DNA样本。<br/>
MDA的前身是滚环扩增（Rolling Circle Amplification，RCA），RCA使用单链DNA作为扩增模板（原始实验材料是M13噬菌体)，当把这个技术应用于双链DNA模板时，成为MDA。</p>

<!--more-->


<h3>MDA起源</h3>

<p>↓全基因组扩增（Whole Genome Amplification, WGA） <br/>
↓引物延伸预扩增（Primer extension preamplification, PEP）<br/>
↓变形寡核苷酸引物PCR（degenerate oligonucleotide primed PCR, DOP-PCR）<br/>
↓滚环复制（Rolling Circle Amplification, RCA）<br/>
↓多重置换扩增（Muliple displacement amplification, MDA）</p>

<p>RCA reaction process<sup>[1]</sup><br/>
<img alt='RCA' width='450' src='http://rachelwxm.github.io/images/POST/MDA/RCA.png'></p>

<h3>材料</h3>

<ul>
<li>Φ29DNA聚合酶：Φ29DNA是从<em>Bacillus subtilis</em>噬菌体Φ29中克隆出的嗜温DNA聚合酶，具有连续合成特性，合成产物可达7～10kb。并且扩增反应可以在30℃恒温进行。</li>
<li>随机六碱基引物：用于随机结合到模板上，作为扩增起始点。</li>
</ul>


<h3>反应条件</h3>

<ul>
<li>95℃加热3min</li>
<li>在30min内缓慢冷却至室温</li>
<li>加入0.6个单位的Φ29DNA聚合酶及0.04个单位的酵母焦磷酸酶</li>
<li>37℃ 反应8h<br/>
(Dean et al.,2001)  <br/>
<img alt='RCA' width='410' src='http://rachelwxm.github.io/images/POST/MDA/MDA.PNG'></li>
</ul>


<h3>优点</h3>

<ul>
<li>MDA的反应产物长度更长</li>
<li>对模板需求量小</li>
<li>Φ29DNA聚合酶可以在恒温下扩增长片段</li>
<li>错误率低（TaqDNA酶—常用PCR酶的1%）</li>
<li>覆盖率较好</li>
</ul>


<h2>MALBAC</h2>

<blockquote><p>Multiple Annealing and Looping Based Amplification Cycles (a.k.a MALBAC) is a quasilinear whole genome amplification method. Unlike conventional DNA amplification methods that are non-linear or exponential (in each cycle, DNA copied can serve as template for subsequent cycles), MALBAC utilizes special primers that allow amplicons to have complementary ends and therefore to loop, preventing DNA from being copied exponentially.</p></blockquote>

<p>与MDA不同，MALBAC的扩增产物不以指数增长，而是拟线性扩增。通过使用特殊的设计的引物，使得扩增产物首尾互补，形成回环结构。这样在反应时就不会因扩增偏向性而大量扩增PCR产物，使得整个基因组得到均衡扩增。  <br/>
回环结构 <img alt='loop' width='100' src='http://rachelwxm.github.io/images/POST/MDA/loop.jpg'></p>

<h3>引物结构</h3>

<p>MALBAC的引物长度为35个碱基，由两部分组成：27nt预设碱基+8nt可变随机碱基，其中27nt预设碱基的序列为：GTG AGT GAT GGT TGA GGT AGT GTG GAG，8nt可变碱基随机连接到基因组模板的不同部位上起始扩增反应。 <br/>
<img src="http://rachelwxm.github.io/images/POST/MDA/malbac-primer.png" alt="primer" /></p>

<h3>酶</h3>

<p>Bst DNA聚合酶</p>

<h3>反应流程</h3>

<ul>
<li>分离并裂解单细胞，获得DNA模板</li>
<li>94℃解链（双链DNA模板变成单链）</li>
<li>骤冷至0℃，引物与模板结合</li>
<li>升温至65℃，进行扩增反应(A)</li>
<li>升温至94℃，解链</li>
<li>5个循环

<ul>
<li>骤冷至0℃(B)</li>
<li>升温至65℃，进行扩增反应(C)</li>
<li>升温至94℃，解链(D)</li>
<li>58℃形成回环结构  (D)</li>
</ul>
</li>
<li>将回环结构的序列进行PCR扩增、测序(D)</li>
</ul>


<p><img alt='malbac-wxm' width='450' src='http://rachelwxm.github.io/images/POST/MDA/MALBAC-wxm.png'></p>

<p>附上一张文章中的原图<br/>
<img alt='malbac' width='450' src='http://rachelwxm.github.io/images/POST/MDA/MALBAC.jpg'></p>

<h3>优点</h3>

<ul>
<li>相比于MDA，MALBAC克服了扩增偏向性（bias）的问题，增大了基因组模板的扩增覆盖度。因为从模板上扩增出来的产物被首尾环化了，不参与后面的循环扩增过程，所以不存在优先扩增产物的问题，只会继续扩增原DNA模板。（“产物”的长度短，引物完全互补，非常具有竞争力&mdash;bias）</li>
<li>痕量样本即可扩增，目前用于单细胞扩增/测序</li>
<li>假阳性和假阴性突变率较低</li>
</ul>


<h2>参考资料</h2>

<p>[1] Dean F B, Nelson J R, Giesler T L, et al. Rapid amplification of plasmid and phage DNA using phi29 DNA polymerase and multiply-primed rolling circle amplification[J]. Genome research, 2001, 11(6): 1095-1099.<br/>
[2] Dean F B, Hosono S, Fang L, et al. Comprehensive human genome amplification using multiple displacement amplification[J]. Proceedings of the National Academy of Sciences, 2002, 99(8): 5261-5266.<br/>
[3] Lasken R S. Single-cell genomic sequencing using multiple displacement amplification[J]. Current opinion in microbiology, 2007, 10(5): 510-516.<br/>
[4] Multiple displacement amplification &ndash; Wikipedia, the free encyclopedia. <br/>
<a href="http://en.wikipedia.org/wiki/Multiple_displacement_amplification">http://en.wikipedia.org/wiki/Multiple_displacement_amplification</a>  <br/>
[5] Zong C, Lu S, Chapman A R, et al. Genome-wide detection of single-nucleotide and copy-number variations of a single human cell[J]. Science, 2012, 338(6114): 1622-1626.<br/>
[6] MALBAC &ndash; Wikipedia, the free encyclopedia.<br/>
<a href="http://en.wikipedia.org/wiki/MALBAC">http://en.wikipedia.org/wiki/MALBAC</a>  <br/>
[7] 我自己做的一个PPT资源，<a href="http://pan.baidu.com/s/1gdj2JLp">http://pan.baidu.com/s/1gdj2JLp</a> ,
提取码<code>psxi</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Octopress搭建Github博客小结-发表]]></title>
    <link href="http://rachelwxm.github.io/blog/2013/12/27/yong-octopressda-jian-githubbo-ke-xiao-jie-fa-biao/"/>
    <updated>2013-12-27T23:15:17+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2013/12/27/yong-octopressda-jian-githubbo-ke-xiao-jie-fa-biao</id>
    <content type="html"><![CDATA[<h3>1. rake 功能</h3>

<p><code>rake new_post['post name']</code>  生成博文框架，生成的博文文件在<br/>
octopress/source/_posts/中，以日期和博文名称命名。<br/>
<code>rake generate</code>    将之前编辑过的内容生成静态文件 <br/>
<code>rake preview</code>    可以在本地localhost:4000端口预览博客内容 <br/>
<code>rake deploy</code>   发布博客内容</p>

<!--more-->


<h4>其他rake命令</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake gen_deploy               相当于rake generate & rake deploy  
</span><span class='line'>rake install [theme]          安装主题  
</span><span class='line'>rake isolate [filename]       只更新某篇博文   
</span><span class='line'>rake clean                    # Clean out caches: .pygments-cache, .gist-cache, .sass-cache  
</span><span class='line'>rake copydot[source,dest]     # copy dot files for deployment   
</span><span class='line'>rake integrate                # Move all stashed posts back into the posts directory, ready for site generation.  
</span><span class='line'>rake list                     # list tasks  
</span><span class='line'>rake push                     # deploy public directory to github pages  
</span><span class='line'>rake rsync                    # Deploy website via rsync  
</span><span class='line'>rake set_root_dir[dir]        # Update configurations to support publishing to root or sub directory  
</span><span class='line'>rake setup_github_pages[repo] # Set up _deploy folder and deploy branch for Github Pages deployment  
</span><span class='line'>rake update_source[theme]     # Move source to source.old, install source theme updates, replace source/_includes/navigation.ht...  
</span><span class='line'>rake update_style[theme]      # Move sass to sass.old, install sass theme updates, replace sass/custom with sass.old/custom  
</span><span class='line'>rake watch                    # Watch the site and regenerate when it changes  </span></code></pre></td></tr></table></div></figure>


<h4>例子</h4>

<p>新建一篇博文，名字叫做“my first post”，Categories和tag的标签都是“life”，正文内容是“Hello Wrold！This is my first post on octopress！”。执行代码如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#在octopress根目录下
</span><span class='line'>$rake new_post['my first post']
</span><span class='line'>mkdir -p source/_posts
</span><span class='line'>Creating new post: source/_posts/2014-04-21-my-first-post.markdown
</span><span class='line'>$vi source/_posts/2014-04-21-my-first-post.markdown
</span><span class='line'>  #下面是vim界面
</span><span class='line'>  1 ---
</span><span class='line'>  2 layout: post     #这个已经是自动生成的了
</span><span class='line'>  3 title: "my first post"     #根据上一个新建命令自动生成的，也可以在这里改成想要在网页上显示的名字
</span><span class='line'>  4 date: 2014-04-21 21:13:57 +0800    #自动按照创建时间生成的，时间会显示在博文的左上角
</span><span class='line'>  5 comments: true    #是否允许评论，当然这个功能可以使用的前提是设置了评论功能；true是允许，false是不允许
</span><span class='line'>  6 categories: life    #categories分类，多个用空格隔开
</span><span class='line'>  7 tag: life    #tag分类（前提是设置了tag分类功能，如果自动生成没有的话自己加上这一行），多个tag用空格隔开
</span><span class='line'>  8 ---
</span><span class='line'>  9 Hello World!  #换行需要在回车之前打俩空格，否则就都显示到一个段落里了
</span><span class='line'>  10 This is my first post on octopress!
</span><span class='line'>
</span><span class='line'>$rake generate    #把markdown格式的博文转换成html格式，并准备好push到网络上（public和_deploy文件夹中的内容）
</span><span class='line'>## Generating Site with Jekyll
</span><span class='line'>unchanged sass/syntax/syntax.scss
</span><span class='line'>unchanged sass/bootstrap/responsive.scss
</span><span class='line'>unchanged sass/bootstrap/bootstrap.scss
</span><span class='line'>unchanged sass/screen.scss
</span><span class='line'>Configuration from YOURDIR/octopress/_config.yml
</span><span class='line'>Building site: source -&gt; public
</span><span class='line'>Successfully generated site: source -&gt; public
</span><span class='line'>$rake preview   #博文抢鲜看：打开浏览器--地址栏输入“localhost:4000”，预览博文格式内容，如果有错误还可以在原来的markdown文档中修改；如果觉得没什么问题了，回到终端中ctrl+c终止预览命令
</span><span class='line'>$rake deploy    #如果没有报错信息的话就可以成功发布博文了</span></code></pre></td></tr></table></div></figure>


<h3>2. 首页只显示部分正文</h3>

<p>在文章正文中插入标记<code>&lt;!--more--&gt;</code>，这样在首页中就只会显示标记前面的内容，后文以<code>Read on</code>链接代替。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>正文开头内容，也是首页摘要显示的部分
</span><span class='line'>&lt;!--more-->
</span><span class='line'>以下内容不会显示在首页文章列表中</span></code></pre></td></tr></table></div></figure>


<p>如果想换成中文文字链接，比如“继续阅读”，可以编辑_confit.yml</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>excerpt_link: "继续阅读"  #用于提示阅读完整文章的文字链接</span></code></pre></td></tr></table></div></figure>


<h3>3. markdown语法</h3>

<p>翻译自<a href="http://support.mashery.com/docs/customizing_your_portal/Markdown_Cheat_Sheet">MASHERY网站</a>。</p>

<h4>标题</h4>

<p>在文字前面加“#”符号表示标记级别，一个“#”表示一级标题，两个表示二级标题，以此类推。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#我是一级标题   
</span><span class='line'>##我是二级标题   
</span><span class='line'>###我是三级标题  
</span><span class='line'>####我是四级标题   
</span><span class='line'>#####我是五级标题  </span></code></pre></td></tr></table></div></figure>


<h4>段落</h4>

<p>用一个或者多个空行分隔不同段落; 在一段文字后面加上两个以上空格表示换行，相当于&lt;br>或者\n的作用。</p>

<h4>强调</h4>

<p>斜体：文字两端标识“*”或“_”，比如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>I am *emphasized*
</span><span class='line'>I am _emphasized_</span></code></pre></td></tr></table></div></figure>


<p>I am <em>emphasized</em><br/>
I am <em>emphasized</em><br/>
粗体：文字两端标识“**”或“__”，比如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>I am **blod**
</span><span class='line'>I am __blod__</span></code></pre></td></tr></table></div></figure>


<p>I am <strong>blod</strong><br/>
I am <strong>blod</strong></p>

<h4>引用链接</h4>

<p>链接的格式有三种：文章中直接引用、定义链接地址及直接显示链接。<br/>
1. 直接引用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>This is [am example](http://example.com/ &quot;Optional Title&quot;)inline link
</span></code></pre></td></tr></table></div></figure>


<p>This is <a href="http://example.com/" title="Optional Title">am example</a>inline link<br/>
2. 定义链接地址</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>[id]: http://example.com/ &quot;Optional Title Here&quot;    #定义链接
</span><span class='line'>This is [an example][id] reference-method link.    #链接
</span></code></pre></td></tr></table></div></figure>


<p>This is <a href="http://example.com/" title="Optional Title Here">an example</a> reference-method link. <br/>
3. 直接显示链接</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;http:</span><span class="err">//</span><span class="na">example</span><span class="err">.</span><span class="na">com</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;address</span><span class="err">@</span><span class="na">example</span><span class="err">.</span><span class="na">com</span><span class="nt">&gt;&lt;/code&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://example.com/">http://example.com/</a> <br/>
<a href="&#109;&#97;&#105;&#x6c;&#x74;&#x6f;&#58;&#x61;&#x64;&#x64;&#x72;&#x65;&#x73;&#115;&#64;&#101;&#120;&#x61;&#109;&#112;&#x6c;&#101;&#x2e;&#x63;&#111;&#109;">&#x61;&#x64;&#100;&#x72;&#x65;&#x73;&#x73;&#x40;&#101;&#120;&#97;&#109;&#x70;&#108;&#101;&#46;&#x63;&#x6f;&#109;</a></code><br/>
4. 引用图片<br/>
引用图片与1.中的方式相似，只是在文字前加上感叹号“！”。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>![Alt text](http://solutions.mashery.com/files/expand_arrow.JPG &quot;Image call example&quot;)
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://solutions.mashery.com/files/expand_arrow.JPG" title="Image call example" alt="Alt text" /><br/>
此外，如果想引用本地图片，只需把要插入的图片拷贝到source/images文件夹中，在图片引用地址种插入如<code>/images/test.jpg</code>即可。</p>

<h4>代码块</h4>

<ol>
<li>在代码前后两行分别用三个反引号标注</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'> ```[language] [title] [url] [link text]
</span><span class='line'> code
</span><span class='line'> ```
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><a href="http://octopress.org/docs/plugins/codeblock/">用codeblock标识</a></li>
</ol>


<figure class='code'><figcaption><span>title</span><a href='http://octopress.org/docs/plugins/codeblock/'>IamLink</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{ % codeblock [lang:language] [title] [url] [link text] [start:#] [mark:#,#-#] [linenos:false] % }
</span><span class='line'>code snippet
</span><span class='line'>{ % endcodeblock % }
</span></code></pre></td></tr></table></div></figure>


<p>[lang:language] &ndash; 程序语言<br/>
[title] &ndash; 代码块标题<br/>
[url] &ndash; 代码块的下载链接或参考链接<br/>
[link text] &ndash; 上文链接的显示文字，默认是“link”<br/>
其他信息参考前文代码块链接内容</p>

<h2><strong>参考文献</strong></h2>

<p>[1] jackphil. (2012-05-16) Octopress技巧集. 来源:  <br/>
<a href="http://blog.jackphil.com/blog/2012/05/16/octopress-tips/">http://blog.jackphil.com/blog/2012/05/16/octopress-tips/</a> <br/>
[2] &ldquo;Markdown Cheat Sheet&#8221;，来源： <br/>
<a href="http://support.mashery.com/docs/customizing_your_portal/Markdown_Cheat_Sheet">http://support.mashery.com/docs/customizing_your_portal/Markdown_Cheat_Sheet</a>
[3] CXH.ME. (2013-09-14) Octopress的一些技巧. 来源: <br/>
<a href="http://cxh.me/2013/09/14/tricks-about-octopress/">http://cxh.me/2013/09/14/tricks-about-octopress/</a>
</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Octopress搭建Github博客小结-美化]]></title>
    <link href="http://rachelwxm.github.io/blog/2013/12/26/yong-octopressda-jian-githubbo-ke-xiao-jie-mei-hua/"/>
    <updated>2013-12-26T02:55:49+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2013/12/26/yong-octopressda-jian-githubbo-ke-xiao-jie-mei-hua</id>
    <content type="html"><![CDATA[<h3>1. 主题</h3>

<p>到目前为止生成的博客页面是统一默认的样式，如果不喜欢当前主题可以在<a href="http://opthemes.com/">Opthemes</a>下载喜欢的第三方主题。以我使用的darkstripes为例，安装方法为：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>git clone git://github.com/amelandri/darkstripes.git .themes/darkstripes
</span><span class='line'>rake install<span class="o">[</span><span class="s1">&#39;darkstripes&#39;</span><span class="o">]</span>
</span><span class='line'>rake generate
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<h3>2. 新建标签页</h3>

<p>生成新标签页，比如“about”</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_page["about"]</span></code></pre></td></tr></table></div></figure>


<p>在顶栏增加新页面：编辑
<code>source/_includes/custom/navigation.html</code>
文件，插入如下格式的内容：
<code>&lt;li&gt;&lt;a href="http://rachelwxm.github.io/about"&gt;About Me&lt;/a&gt;&lt;/li&gt;</code></p>

<figure class='code'><figcaption><span>navigation.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">&quot;main-navigation&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/&quot;</span><span class="nt">&gt;</span>Blog<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/blog/archives&quot;</span><span class="nt">&gt;</span>Archives<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/about&quot;</span><span class="nt">&gt;</span>About Me<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>编辑新标签内容：
修改
<code>octopress/source/about/index.markdown</code>
文件，添加要显示的信息。</p>

<h3>3. 侧边栏</h3>

<p>在国内基本无法访问脸书和推特，所以自带模板的这些功能可以删掉。方法是编辑_config.yml，注释掉相关内容，同时可以补全作者名称等博客信息。</p>

<p><p><a href="http://codemacro.com/2012/07/18/add-tag-to-octopress/">在侧边栏增加标签云(tag cloud)</a>
<p><a href="http://codemacro.com/2012/07/18/add-category-list-to-octopress/">在侧边栏增加分类(category)</a>
<p><a href="http://www.yanjiuyanjiu.com/blog/20130402/">添加about me边栏</a> </p>
Tips:<br/>
生成category的方法很简单，自动生成的博文框架开头会让作者手动填写，如下所示</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&mdash;&ndash;
</span><span class='line'> layout: post
</span><span class='line'> title: &ldquo;用Octopress搭建Github博客小结-美化&rdquo;
</span><span class='line'> date: 2013-12-26 02:55:49 +0800
</span><span class='line'> comments: true             #是否显示评论栏
</span><span class='line'> categories: Octopress    #在这里填写分类信息，多个以空格隔开
</span><span class='line'> &mdash;&ndash;</span></code></pre></td></tr></table></div></figure></p>

<h3>4. 评论与转发</h3>

<p>在_config.yml中加入
<code>weibo_share: true</code>
。在<code>source/_includes/post/</code>文件夹中创建weibo.html文件，把下面两段代码粘贴到weibo.html中。
<figure class='code'><figcaption><span>share</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!&mdash; JiaThis Button BEGIN &mdash;&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;jiathis_style_24x24&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;jiathis_button_tsina&quot;</span><span class="nt">&gt;&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;jiathis_button_renren&quot;</span><span class="nt">&gt;&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;jiathis_button_email&quot;</span><span class="nt">&gt;&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;jiathis_button_evernote&quot;</span><span class="nt">&gt;&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;<a href="http://www.jiathis.com/share&amp;quot;">http://www.jiathis.com/share&amp;quot;</a></span> <span class="na">class=</span><span class="s">&quot;jiathis jiathis_txt jtico jtico_jiathis&quot;</span> <span class="na">target=</span><span class="s">&quot;_blank&quot;</span><span class="nt">&gt;&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;jiathis_counter_style&quot;</span><span class="nt">&gt;&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;<a href="http://v3.jiathis.com/code_mini/jia.js&amp;quot;">http://v3.jiathis.com/code_mini/jia.js&amp;quot;</a></span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="c">&lt;!&mdash; JiaThis Button END &mdash;&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<figure class='code'><figcaption><span>comment</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!&mdash; UY BEGIN &mdash;&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;uyan_frame&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;<a href="http://v2.uyan.cc/code/uyan.js?uid=1880878&amp;quot;">http://v2.uyan.cc/code/uyan.js?uid=1880878&amp;quot;</a></span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="c">&lt;!&mdash; UY END &mdash;&gt;</span>
</span></code></pre></td></tr></table></div></figure>
修改
<code>source\_includes/post/sharing.html</code>
，增加:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{ % if site.weibo_share % }
</span><span class='line'>  { % include post/weibo.html % }
</span><span class='line'>{ % endif % }
</span></code></pre></td></tr></table></div></figure></p>

<h2><strong>参考文献</strong></h2>

<p>[1] biaobiaoqi. (2013-07-10) 定制Octopress. 来源：<br/>
<a href="http://biaobiaoqi.me/blog/2013/07/10/decorate-octopress/">http://biaobiaoqi.me/blog/2013/07/10/decorate-octopress/</a><br>
[2] 戴方勤. (2013-04-02) 我的Octopress配置. 来源：<br/>
<a href="http://www.yanjiuyanjiu.com/blog/20130402/">http://www.yanjiuyanjiu.com/blog/20130402/</a><br>
[3] Kevin Lynx.（2012-07-18）为octopress添加tag Cloud. 来源：  <br/>
<a href="http://codemacro.com/2012/07/18/add-tag-to-octopress/">http://codemacro.com/2012/07/18/add-tag-to-octopress/</a>   <br/>
[4] Kevin Lynx.（2012-07-18）为octopress添加分类(category)列表. 来源： <br/>
<a href="http://codemacro.com/2012/07/18/add-category-list-to-octopress/">http://codemacro.com/2012/07/18/add-category-list-to-octopress/</a>   <br/>
[5] 唐巧. （2012-02-10）象写程序一样写博客：搭建基于github的博客. 来源:  <br/>
<a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Octopress搭建Github博客小结-安装]]></title>
    <link href="http://rachelwxm.github.io/blog/2013/12/25/yong-octopressda-jian-githubbo-ke-xiao-jie-1/"/>
    <updated>2013-12-25T17:43:25+08:00</updated>
    <id>http://rachelwxm.github.io/blog/2013/12/25/yong-octopressda-jian-githubbo-ke-xiao-jie-1</id>
    <content type="html"><![CDATA[<p>网上已经很多从零安装的教程，我主要参照了两篇中文博文：唐巧的《<a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">象写程序一样写博客：搭建基于github的博客</a>》和荒野无灯的《<a href="http://ihacklog.com/post/how-to-setup-an-octopress-blog-on-github.html">用Octopress搭建基于github的博客</a>》。在这里我就简要的把安装步骤写一下，详细信息还可以参照<a href="http://octopress.org/">octpress</a>的官方网站。</p>

<!--more-->


<p></p>

<h3>1. 安装rvm和ruby</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bash -s stable &lt; &lt;<span class="o">(</span>curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer<span class="o">)</span>
</span><span class='line'>rvm install 1.9.3
</span><span class='line'>rvm use 1.9.3
</span><span class='line'>rvm rubygems latest
</span></code></pre></td></tr></table></div></figure>


<h3>2. 下载octopress</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nb">cd </span>octopress
</span></code></pre></td></tr></table></div></figure>


<h3>3. 安装依赖</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo gem install bundler
</span><span class='line'>rbenv rehash
</span><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<h3>4. 安装octopress</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake install  <span class="c">##注意：这步操作会重新安装octopress主题，覆盖之前的内容！</span>
</span></code></pre></td></tr></table></div></figure>


<h3>5. 创建github账号</h3>

<p>在github账户中创建一个新的库（repositories）username.github.com，username要和账号名称一致。如果之前已经申请过了，我建议先备份文档然后清空重新申请，否则会经常报错（octopress将要上传的内容会覆盖原有内容，所以github每次都会提示）。</p>

<h3>6. 创建ostopress和github的链接 <br></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake setup_github_pages
</span></code></pre></td></tr></table></div></figure>


<p>这一步会提示输入github账号，按照提示内容输入即可，格式如git@github.com:yourusername/yourusername.github.com。<br/>
现在博客就已经基本搭建好了，可以通过以下命令测试一下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake generate
</span><span class='line'>rake preview
</span></code></pre></td></tr></table></div></figure>


<p>在浏览器上访问
<code>localhost:400</code>
，如果出现了博客界面说明上述内容都已经成功执行了。</p>

<h2><strong>参考文献</strong></h2>

<p>[1] 唐巧. （2012-02-10）象写程序一样写博客：搭建基于github的博客. 来源:<br/>
<a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/</a> <br>
[2] 荒野无灯. (2012-04-13) 用Octopress搭建基于github的博客. 来源: <br/>
<a href="http://ihacklog.com/post/how-to-setup-an-octopress-blog-on-github.html">http://ihacklog.com/post/how-to-setup-an-octopress-blog-on-github.html</a>  <br></p>
]]></content>
  </entry>
  
</feed>
